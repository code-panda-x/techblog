[{"categories":["Programming Language"],"content":"HTML Basics","date":"2023-11-01","objectID":"/html/","tags":["HTML","Web"],"title":"HTML CheatSheet","uri":"/html/"},{"categories":["Programming Language"],"content":"HTML ","date":"2023-11-01","objectID":"/html/:0:0","tags":["HTML","Web"],"title":"HTML CheatSheet","uri":"/html/"},{"categories":["Programming Language"],"content":"Definition HTML is the standard markup language for Web pages HTML is NOT a programming language ","date":"2023-11-01","objectID":"/html/:1:0","tags":["HTML","Web"],"title":"HTML CheatSheet","uri":"/html/"},{"categories":["Programming Language"],"content":"HTML Elements ","date":"2023-11-01","objectID":"/html/:2:0","tags":["HTML","Web"],"title":"HTML CheatSheet","uri":"/html/"},{"categories":["Programming Language"],"content":"Header \u003ch1\u003e header1\u003c/h1\u003e \u003ch2\u003e header2\u003c/h2\u003e ","date":"2023-11-01","objectID":"/html/:2:1","tags":["HTML","Web"],"title":"HTML CheatSheet","uri":"/html/"},{"categories":["Programming Language"],"content":"Paragraph \u003cp\u003eText here\u003c/p\u003e Change text fonts: \u003ci\u003eItalic\u003c/i\u003e \u003cu\u003eUnderline\u003c/u\u003e \u003cb\u003eBold\u003c/b\u003e ","date":"2023-11-01","objectID":"/html/:2:2","tags":["HTML","Web"],"title":"HTML CheatSheet","uri":"/html/"},{"categories":["Programming Language"],"content":"Section \u003csection\u003e elements... \u003c/section\u003e ","date":"2023-11-01","objectID":"/html/:2:3","tags":["HTML","Web"],"title":"HTML CheatSheet","uri":"/html/"},{"categories":["Programming Language"],"content":"Lists Unordered list \u003cul\u003e \u003cli\u003e Apple \u003c/li\u003e \u003cli\u003e Banana \u003c/li\u003e \u003c/ul\u003e Ordered list \u003col\u003e \u003cli\u003e Apple \u003c/li\u003e \u003cli\u003e Banana \u003c/li\u003e \u003c/ol\u003e ","date":"2023-11-01","objectID":"/html/:2:4","tags":["HTML","Web"],"title":"HTML CheatSheet","uri":"/html/"},{"categories":["Programming Language"],"content":"Links \u003ca href=\"index.html\"\u003e Click here \u003c/a\u003e ","date":"2023-11-01","objectID":"/html/:2:5","tags":["HTML","Web"],"title":"HTML CheatSheet","uri":"/html/"},{"categories":["Programming Language"],"content":"Images \u003cimg src=\"image.png\" width=\"100\" height=\"50\" alt=\"Image Name\"\u003e ","date":"2023-11-01","objectID":"/html/:2:6","tags":["HTML","Web"],"title":"HTML CheatSheet","uri":"/html/"},{"categories":["Programming Language"],"content":"Table \u003cp\u003e \u003ctable\u003e \u003ctr\u003e \u003cth\u003e head1 \u003c/th\u003e \u003cth\u003e head2 \u003c/th\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003e item1 \u003c/td\u003e \u003ctd\u003e item2 \u003c/td\u003e \u003c/tr\u003e \u003c/table\u003e \u003c/p\u003e ","date":"2023-11-01","objectID":"/html/:2:7","tags":["HTML","Web"],"title":"HTML CheatSheet","uri":"/html/"},{"categories":["Programming Language"],"content":"Form \u003cform\u003e \u003clable\u003e Type in Name\u003c/lable\u003e \u003cinput name=\"Name\"\u003e\u003cbr\u003e \u003clable\u003e Date\u003c/lable\u003e \u003cinput name=\"Date\" type=\"date\u003e\u003cbr\u003e \u003cbutton\u003eClick\u003c/button\u003e \u003c/form\u003e ","date":"2023-11-01","objectID":"/html/:2:8","tags":["HTML","Web"],"title":"HTML CheatSheet","uri":"/html/"},{"categories":["Programming Language"],"content":"Commonly used Insert a new line: \u003cbr\u003e New line starts here Comments: \u003c!-- Comments --\u003e ","date":"2023-11-01","objectID":"/html/:2:9","tags":["HTML","Web"],"title":"HTML CheatSheet","uri":"/html/"},{"categories":["Programming Language"],"content":"Sql Cheatsheet","date":"2023-08-19","objectID":"/sql/","tags":["SQL","Programming"],"title":"Sql Cheatsheet","uri":"/sql/"},{"categories":["Programming Language"],"content":"SQL queries SQL Summary: https://www.w3schools.com/sql/sql_examples.asp SQL operations: https://www.w3schools.com/sql/sql_operators.asp Select select column from table select distinct column from table select distinct id from table Where SELECT * FROM Customers WHERE Country='Mexico' SELECT * FROM Customers WHERE CustomerID=1 AND, OR and NOT Operators SELECT * FROM Customers WHERE Country='Germany' AND (City='Berlin' OR City='München'); SELECT * FROM Customers WHERE NOT Country='Germany' AND NOT Country='USA'; ORDER BY This means that it orders by Country, but if some rows have the same Country, it orders them by CustomerName in descending order: SELECT * FROM Customers ORDER BY Country ASC, CustomerName DESC; IS NULL Operator SELECT CustomerName, ContactName, Address FROM Customers WHERE Address IS NULL; SELECT CustomerName, ContactName, Address FROM Customers WHERE Address IS NOT NULL; SELECT TOP Clause SELECT TOP 3 * FROM Customers; SELECT * FROM Customers LIMIT 3; Functions SELECT MIN(column_name) Min() Max() Count() Avg() sum() LIKE Operator SELECT column1, column2, ... FROM table_name WHERE columnN LIKE pattern; The percent sign (%) represents zero, one, or multiple characters The underscore sign (_) represents one, single character Wildcard characters: https://www.w3schools.com/sql/sql_wildcards.asp IN Operator SELECT * FROM Customers WHERE Country NOT IN ('Germany', 'France', 'UK'); SELECT * FROM Customers WHERE Country IN (SELECT Country FROM Suppliers); Between, Not Between SELECT * FROM Products WHERE Price BETWEEN 10 AND 20 AND CategoryID NOT IN (1,2,3); SELECT * FROM Products WHERE ProductName NOT BETWEEN 'Carnarvon Tigers' AND 'Mozzarella di Giovanni' ORDER BY ProductName; Joins join xxx on xxx SELECT column_name(s) FROM table1 INNER JOIN table2 ON table1.column_name = table2.column_name; Different Types of SQL JOINs: (INNER) JOIN: Returns records that have matching values in both tables LEFT (OUTER) JOIN: Returns all records from the left table, and the matched records from the right table RIGHT (OUTER) JOIN: Returns all records from the right table, and the matched records from the left table FULL (OUTER) JOIN: Returns all records when there is a match in either left or right table UNION Operator The UNION operator is used to combine the result-set of two or more SELECT statements. SELECT City, Country FROM Customers WHERE Country='Germany' UNION SELECT City, Country FROM Suppliers WHERE Country='Germany' ORDER BY City; GROUP BY Select number of customers from each country SELECT COUNT(CustomerID), Country FROM Customers GROUP BY Country; Group by: Basically Merge same records HAVING The HAVING clause was added to SQL because the WHERE keyword cannot be used with aggregate functions SELECT COUNT(CustomerID), Country FROM Customers GROUP BY Country HAVING COUNT(CustomerID) \u003e 5; Combo: lists if the employees “Davolio” or “Fuller” have registered more than 25 orders: SELECT Employees.LastName, COUNT(Orders.OrderID) AS NumberOfOrders FROM Orders INNER JOIN Employees ON Orders.EmployeeID = Employees.EmployeeID WHERE LastName = 'Davolio' OR LastName = 'Fuller' GROUP BY LastName HAVING COUNT(Orders.OrderID) \u003e 25; Generally, select A, B, Group By A Having B EXISTS The EXISTS operator is used to test for the existence of any record in a subquery. SELECT SupplierName FROM Suppliers WHERE EXISTS (SELECT ProductName FROM Products WHERE Products.SupplierID = Suppliers.supplierID AND Price \u003c 20); Comment --Select all Practice Problem LC: 1068: select columns from different tables, join 1581: count 197: comparsion ","date":"2023-08-19","objectID":"/sql/:0:0","tags":["SQL","Programming"],"title":"Sql Cheatsheet","uri":"/sql/"},{"categories":["General Tech"],"content":"All about testing","date":"2023-08-10","objectID":"/tests/","tags":["Test"],"title":"All About Testing","uri":"/tests/"},{"categories":["General Tech"],"content":"Different Testing Concepts Unit testing: test the smallest piece of code Integration testing: test if different components work together System testing: test every component of an application to make sure that they work as a complete and unified whole Smoke testing: ensure that the critical functions of the program are working Regression testing: determine if code modifications break an application Performance testing: examines the speed, stability, reliability, scalability, and resource usage of a software application under a specified workload Load testing: determines how the software application behaves while being accessed by multiple users simultaneously Stress testing: tests beyond normal operational capacity to test the results ","date":"2023-08-10","objectID":"/tests/:1:0","tags":["Test"],"title":"All About Testing","uri":"/tests/"},{"categories":["General Tech"],"content":"More White box testing: Know code and structure of the product to be tested and uses that knowledge to perform the tests Black box testing: Does not know its internal functioning ","date":"2023-08-10","objectID":"/tests/:2:0","tags":["Test"],"title":"All About Testing","uri":"/tests/"},{"categories":["General Tech"],"content":"Multithreading","date":"2023-08-06","objectID":"/multithreading/","tags":["OS"],"title":"Multithreading","uri":"/multithreading/"},{"categories":["General Tech"],"content":"Multithreading on a Single Processor The execution of multiple threads on a single CPU Multithreading on a single processor gives the illusion of running in parallel. In reality, the processor is switching by using a scheduling algorithm. Or, it’s switching based on a combination of external inputs (interrupts) and how the threads have been prioritized. These threads run concurrently and they share resources For example, this is a bit like chatting with different people through various IM windows; although you’re actually switching back and forth, the net result is that you’re having multiple conversations at the same time. ","date":"2023-08-06","objectID":"/multithreading/:0:1","tags":["OS"],"title":"Multithreading","uri":"/multithreading/"},{"categories":["General Tech"],"content":"Multithreading on Multiple Processors Multiprocessing is the use of two or more central processing units within a single computer system The execution of multiple threads on multiple CPU cores Multithreading on multiple processor cores is truly parallel. Individual microprocessors work together to achieve the result more efficiently. There are multiple parallel, concurrent tasks happening at once. For example, in a browser, multiple tabs can be different threads. MS Word uses multiple threads: one thread to format the text, another thread to process inputs ","date":"2023-08-06","objectID":"/multithreading/:0:2","tags":["OS"],"title":"Multithreading","uri":"/multithreading/"},{"categories":["General Tech"],"content":"Issues Involved with Multiple Threads ","date":"2023-08-06","objectID":"/multithreading/:1:0","tags":["OS"],"title":"Multithreading","uri":"/multithreading/"},{"categories":["General Tech"],"content":"Deadlock Deadlocks happen when two or more threads aren’t able to make any progress because the resource required by the first thread is held by the second and the resource required by the second thread is held by the first. ","date":"2023-08-06","objectID":"/multithreading/:1:1","tags":["OS"],"title":"Multithreading","uri":"/multithreading/"},{"categories":["General Tech"],"content":"Race conditions https://stackoverflow.com/questions/34510/what-is-a-race-condition Race conditions happen when threads run through critical sections without thread synchronization. The threads “race” through the critical section to write or read shared resources and depending on the order in which threads finish the “race”, the program output changes. Critical section is any piece of code that has the possibility of being executed concurrently by more than one thread of the application and exposes any shared data or resources used by the application for access. In short: Threads access shared resources at the same time -\u003e program output is inconsistent Detailed race condition with example: A race condition occurs when two or more threads can access shared data and they try to change it at the same time. Because the thread scheduling algorithm can swap between threads at any time, you don’t know the order in which the threads will attempt to access the shared data. Therefore, the result of the change in data is dependent on the thread scheduling algorithm, i.e. both threads are “racing” to access/change the data. Problems often occur when one thread does a “check-then-act” (e.g. “check” if the value is X, then “act” to do something that depends on the value being X) and another thread does something to the value in between the “check” and the “act”. E.g: if (x == 5) // The \"Check\" { y = x * 2; // The \"Act\" // If another thread changed x in between \"if (x == 5)\" and \"y = x * 2\" above, // y will not be equal to 10. } The point being, y could be 10, or it could be anything, depending on whether another thread changed x in between the check and act. You have no real way of knowing. In order to prevent race conditions from occurring, you would typically put a lock around the shared data to ensure only one thread can access the data at a time. This would mean something like this: // Obtain lock for x if (x == 5) { y = x * 2; // Now, nothing can change x until the lock is released. // Therefore y = 10 } // release lock for x ","date":"2023-08-06","objectID":"/multithreading/:1:2","tags":["OS"],"title":"Multithreading","uri":"/multithreading/"},{"categories":["General Tech"],"content":"Starvation Other than a deadlock, an application thread can also experience starvation, where it never gets CPU time or access to shared resources because other “greedy” threads hog the resources. ","date":"2023-08-06","objectID":"/multithreading/:1:3","tags":["OS"],"title":"Multithreading","uri":"/multithreading/"},{"categories":["General Tech"],"content":"Livelock A livelock happens when two threads keep taking actions in response to the other thread instead of making any progress. The best analogy is to think of two persons trying to cross each other in a hallway. John moves to the left to let Arun pass, and Arun moves to his right to let John pass. Both block each other now. John sees he’s now blocking Arun and moves to his right and Arun moves to his left seeing he’s blocking John. They never cross each other and keep blocking each other. This scenario is an example of a livelock. ","date":"2023-08-06","objectID":"/multithreading/:1:4","tags":["OS"],"title":"Multithreading","uri":"/multithreading/"},{"categories":["General Tech"],"content":"How to avoid issues with multiple threads ","date":"2023-08-06","objectID":"/multithreading/:2:0","tags":["OS"],"title":"Multithreading","uri":"/multithreading/"},{"categories":["General Tech"],"content":"How to avoid deadlocks? Avoid Nested Locks: This is the main reason for deadlock. Deadlock mainly happens when we give locks to multiple threads. Avoid giving locks to multiple threads if you already have given to one. Avoid Unnecessary Locks: You should lock only those members which are required. Having unnecessary locks can lead to a deadlock. As a best practice, try to reduce the need to lock things as much as you can. ","date":"2023-08-06","objectID":"/multithreading/:2:1","tags":["OS"],"title":"Multithreading","uri":"/multithreading/"},{"categories":["General Tech"],"content":"How to avoid race conditions? Race conditions occur within the critical section of your code. These can be avoided with proper **thread synchronization** within critical sections by using techniques like locks, atomic variables, and message passing. A synchronized block in Java is synchronized on some object. All synchronized blocks synchronize on the same object and can only have one thread executed inside them at a time. ","date":"2023-08-06","objectID":"/multithreading/:2:2","tags":["OS"],"title":"Multithreading","uri":"/multithreading/"},{"categories":["General Tech"],"content":"How to avoid starvation? The best way to avoid starvation is to use a lock such as ReentrantLock or a mutex. This introduces a “fair” lock which favors granting access to the thread that has been waiting longest. If you wanted to have multiple threads run at once while preventing starvation, you can use a semaphore. ","date":"2023-08-06","objectID":"/multithreading/:2:3","tags":["OS"],"title":"Multithreading","uri":"/multithreading/"},{"categories":["General Tech"],"content":"How to avoid livelocks? Livelocks can be avoided by making use of ReentrantLock as a way to determine which thread has been waiting longer so that you can assign it a lock. As a best practice, don’t block locks; if a thread can’t acquire a lock, it should release previously acquired locks to try again later. ","date":"2023-08-06","objectID":"/multithreading/:2:4","tags":["OS"],"title":"Multithreading","uri":"/multithreading/"},{"categories":["General Tech"],"content":"Concurrency vs Parallelism","date":"2023-07-31","objectID":"/concurrency/","tags":["OS"],"title":"Concurrency vs Parallelism","uri":"/concurrency/"},{"categories":["General Tech"],"content":"Concurrency (Multithreading on a Single Processor) Concurrency means executing multiple tasks at the same time but not necessarily simultaneously. When you have to perform more than one task but you have a single resource then we go for concurrency. In a single-core environment, concurrency is achieved by context switching. (the execution of multiple tasks is interleaved, instead of each task being executed sequentially one after another.) For example: This is a bit like chatting with different people through various IM windows; although you’re actually switching back and forth, the net result is that you’re having multiple conversations at the same time. ","date":"2023-07-31","objectID":"/concurrency/:0:1","tags":["OS"],"title":"Concurrency vs Parallelism","uri":"/concurrency/"},{"categories":["General Tech"],"content":"Parallelism (Multithreading on multi-core) (Multiprocessing) Parallelism means that your program leverages the hardware of multi-core machines to execute tasks at the same time by breaking up work into tasks, each of which is executed on a separate core. Example For example: In a browser, multiple tabs can be different threads. MS Word uses multiple threads: one thread to format the text, another thread to process inputs Note Concurrency \u0026 parallelism are concepts Multithreading are implementations ","date":"2023-07-31","objectID":"/concurrency/:0:2","tags":["OS"],"title":"Concurrency vs Parallelism","uri":"/concurrency/"},{"categories":["General Tech"],"content":"Thread vs Process","date":"2023-07-27","objectID":"/thread-process/","tags":["OS"],"title":"Thread vs Process","uri":"/thread-process/"},{"categories":["General Tech"],"content":"What is a Thread, really? Short answer: Thread is a subset of a process Longer answer: Thread is an independent set of values for CPU registers Detailed answer: A thread is an execution context for CPU, which is all the information CPU needs to execute instructions. Essentially: More about thread ","date":"2023-07-27","objectID":"/thread-process/:1:0","tags":["OS"],"title":"Thread vs Process","uri":"/thread-process/"},{"categories":["General Tech"],"content":"Thread components: Program counter: keeps track of which instruc­tion to execute next Stack: which contains the execution history Registers: which hold its current working variables ","date":"2023-07-27","objectID":"/thread-process/:1:1","tags":["OS"],"title":"Thread vs Process","uri":"/thread-process/"},{"categories":["General Tech"],"content":"Example: A single thread could be displaying the current tab you’re in, and a different thread could be another tab. ","date":"2023-07-27","objectID":"/thread-process/:1:2","tags":["OS"],"title":"Thread vs Process","uri":"/thread-process/"},{"categories":["General Tech"],"content":"What is a Process, really? Short answer: Process is a running program Long answer: The process model is based on two independent concepts: resource grouping and execution (thread) More about process ","date":"2023-07-27","objectID":"/thread-process/:2:0","tags":["OS"],"title":"Thread vs Process","uri":"/thread-process/"},{"categories":["General Tech"],"content":"Process components: stack: stores functional calls, local variables heap: memory that is dynamically allocated to a process during its execution text/code: code instructions data: static variables ","date":"2023-07-27","objectID":"/thread-process/:2:1","tags":["OS"],"title":"Thread vs Process","uri":"/thread-process/"},{"categories":["General Tech"],"content":"Example: When you double click on the Google Chrome icon on your computer, you start a process which will run the Google Chrome program ","date":"2023-07-27","objectID":"/thread-process/:2:2","tags":["OS"],"title":"Thread vs Process","uri":"/thread-process/"},{"categories":["General Tech"],"content":"Thread vs Process Essentially: Processes are used to group resources together; threads are the entities scheduled for execution on the CPU. ","date":"2023-07-27","objectID":"/thread-process/:3:0","tags":["OS"],"title":"Thread vs Process","uri":"/thread-process/"},{"categories":["General Tech"],"content":"Comparsion Table Process Thread Process is a running program Thread is a subset of a process Process is heavyweight Thread is lightweight The process is independent Threads share memory ","date":"2023-07-27","objectID":"/thread-process/:3:1","tags":["OS"],"title":"Thread vs Process","uri":"/thread-process/"},{"categories":["General Tech"],"content":"Resource Sharing Difference Processes have separate address spaces (indepedent) For multiple threads in the same process Threads share same address space and code, data, heap segments Threads DO NOT SHARE STACK ","date":"2023-07-27","objectID":"/thread-process/:3:2","tags":["OS"],"title":"Thread vs Process","uri":"/thread-process/"},{"categories":["General Tech"],"content":"What is async programming","date":"2023-07-26","objectID":"/async/","tags":["Async","Programming"],"title":"Async Programming","uri":"/async/"},{"categories":["General Tech"],"content":"Async Porgramming ","date":"2023-07-26","objectID":"/async/:1:0","tags":["Async","Programming"],"title":"Async Programming","uri":"/async/"},{"categories":["General Tech"],"content":"What is async programming? Async programming is about non-blocking execution between functions. It enables your program to start a potentially long-running task and still be able to be responsive to other events while that task runs, So we don’t have to wait our time waiting for that long task to be finished Example Data may take long a long time to submit to/retrieve from a database. With asynchronous programming, the user can move to another screen while the function continues to execute. When a photo is loaded and sent on Instagram, the user does not have to stay on the same screen waiting for the photo to finish loading. The user can continue in the app or leave the app while the photo loads. This can be achieved by taking a call-back reference. The async call takes a call-back reference and returns execution back to your code as soon as the request has been placed with the remote system. Your UI can continue to respond to the user while the remote system does whatever processing is required, once it returns the data to your call-back method then that method can update the UI (“Photo Uploaded!”) as appropriate. ","date":"2023-07-26","objectID":"/async/:1:1","tags":["Async","Programming"],"title":"Async Programming","uri":"/async/"},{"categories":["General Tech"],"content":"Sync vs Async Synchronous: you cook the eggs, then you cook the toast. Asynchronous (single threaded): you start the eggs cooking and set a timer. You start the toast cooking, and set a timer. While they are both cooking, you clean the kitchen. When the timers go off you take the eggs off the heat and the toast out of the toaster and serve them. Asynchronous (multi-threaded): you hire two more cooks, one to cook eggs and one to cook toast. Now you have the problem of coordinating the cooks so that they do not conflict with each other in the kitchen when sharing resources. Async programming can be applied to single or multi-threading ","date":"2023-07-26","objectID":"/async/:1:2","tags":["Async","Programming"],"title":"Async Programming","uri":"/async/"},{"categories":["General Tech"],"content":"C# Async Implementation https://learn.microsoft.com/en-us/dotnet/csharp/asynchronous-programming/ https://learn.microsoft.com/en-us/dotnet/csharp/asynchronous-programming/async-scenarios ","date":"2023-07-26","objectID":"/async/:1:3","tags":["Async","Programming"],"title":"Async Programming","uri":"/async/"},{"categories":["General Tech"],"content":"Server side rendering vs Client side rendering","date":"2023-07-23","objectID":"/ssr-vs-csr/","tags":["Web"],"title":"Ssr vs Csr","uri":"/ssr-vs-csr/"},{"categories":["General Tech"],"content":"When user sends a request to a server, different server responses differently depending on the implementations. ","date":"2023-07-23","objectID":"/ssr-vs-csr/:0:0","tags":["Web"],"title":"Ssr vs Csr","uri":"/ssr-vs-csr/"},{"categories":["General Tech"],"content":"Server side rendering Whenever you visit a website, your browser makes a request to the server. Once the request is done processing, your browser gets back the fully rendered HTML and displays it on the screen. If you then decide to visit a different page on the website, your browser will once again make another request for the new information. This will occur each and every time you visit a page that your browser does not have a cached version of. It doesn’t matter if the new page only has a few items that are different than the current page, the browser will ask for the entire new page and will re-render everything from the ground up. ","date":"2023-07-23","objectID":"/ssr-vs-csr/:1:0","tags":["Web"],"title":"Ssr vs Csr","uri":"/ssr-vs-csr/"},{"categories":["General Tech"],"content":"Pros Better SEO The initial page load is faster Good for static sties ","date":"2023-07-23","objectID":"/ssr-vs-csr/:1:1","tags":["Web"],"title":"Ssr vs Csr","uri":"/ssr-vs-csr/"},{"categories":["General Tech"],"content":"Cons Frequent server requests Overall slow page rendering Full page reloads Non-rich site interactions. ","date":"2023-07-23","objectID":"/ssr-vs-csr/:1:2","tags":["Web"],"title":"Ssr vs Csr","uri":"/ssr-vs-csr/"},{"categories":["General Tech"],"content":"Client side rendering Basically rendering content in the browser using JavaScript. Instead of getting all of the content from the HTML document itself, you are getting a bare-bones HTML document with a JavaScript file that will render the rest of the site using the browser. This is much faster since you are only loading a very small section of the page to fetch the new content, instead of loading the entire page. ","date":"2023-07-23","objectID":"/ssr-vs-csr/:2:0","tags":["Web"],"title":"Ssr vs Csr","uri":"/ssr-vs-csr/"},{"categories":["General Tech"],"content":"Pros Rich site interactions Fast website rendering after the initial load No full page reloads Great for web applications (Next.js) ","date":"2023-07-23","objectID":"/ssr-vs-csr/:2:1","tags":["Web"],"title":"Ssr vs Csr","uri":"/ssr-vs-csr/"},{"categories":["General Tech"],"content":"Cons Low SEO Initial load might require more time ","date":"2023-07-23","objectID":"/ssr-vs-csr/:2:2","tags":["Web"],"title":"Ssr vs Csr","uri":"/ssr-vs-csr/"},{"categories":["General Tech"],"content":"How are most of the websites/blogs really built","date":"2023-07-19","objectID":"/how-are-blogs-built/","tags":["Blog","Hugo","Git"],"title":"How are blogs built","uri":"/how-are-blogs-built/"},{"categories":["General Tech"],"content":"How are most of the websites/blogs built? Really? Typically, there are two layers of website building: Pull content from local file system (md files) or third party CMS Render the website ","date":"2023-07-19","objectID":"/how-are-blogs-built/:1:0","tags":["Blog","Hugo","Git"],"title":"How are blogs built","uri":"/how-are-blogs-built/"},{"categories":["General Tech"],"content":"The first layer - Content pulling Conventional blog engines hosted on GitHub (Hexo, Hugo, Jekyll) host their “content” in files stored and managed by Git. Gatsby and Gridsome, besides supporting file-based content sourcing, also have plugins that enables them to pull “content” from a third-party CMS, whether it’s a self-hosted WordPress or Ghost, or a standalone cloud-based solution like Strapi, DatoCMS, or Contentful. ","date":"2023-07-19","objectID":"/how-are-blogs-built/:1:1","tags":["Blog","Hugo","Git"],"title":"How are blogs built","uri":"/how-are-blogs-built/"},{"categories":["General Tech"],"content":"The second layer - Content rendering Content rendering is handled by our website generator, where it makes use of the data that we provide in the first layer, and compiles / renders the website on demand. Again, conventional blog engines (Hexo, Hugo, Jekyll) get their data during build-time, and requires rebuilding the entire site when data is updated (like updating articles, publishing new articles, etc.). Newer frameworks (like Next.js) are able to take advantage of “server-side rendering” (SSR) that guarantees to return the newest content pulled from layer one without having to rebuild or re-render the whole site. ","date":"2023-07-19","objectID":"/how-are-blogs-built/:1:2","tags":["Blog","Hugo","Git"],"title":"How are blogs built","uri":"/how-are-blogs-built/"},{"categories":["General Tech"],"content":"Blog building workflow In my case, I store markdown files locally and use Hugo to generate web content. I use GitHub to host my code and I use Netlify to depoly my website live. Detailed blog building processes can be found here ","date":"2023-07-19","objectID":"/how-are-blogs-built/:2:0","tags":["Blog","Hugo","Git"],"title":"How are blogs built","uri":"/how-are-blogs-built/"},{"categories":["General Tech"],"content":"More… Hugo is a static site generator (webiste displays the same to all users). If we want dynamic websites (websties that response to different user differently), we need tools like wordpress. One other way is to code up a website on your own using any frameworks (React/Express/ASP.NET) and deploy it. This is a good practice to learn different tech stacks. ","date":"2023-07-19","objectID":"/how-are-blogs-built/:3:0","tags":["Blog","Hugo","Git"],"title":"How are blogs built","uri":"/how-are-blogs-built/"},{"categories":["General Tech"],"content":"Some pros and cons for each option https://devpractical.com/how-are-websites-created/ ","date":"2023-07-19","objectID":"/how-are-blogs-built/:3:1","tags":["Blog","Hugo","Git"],"title":"How are blogs built","uri":"/how-are-blogs-built/"},{"categories":null,"content":"Docker ","date":"2022-04-22","objectID":"/docker/:0:0","tags":null,"title":"Docker \u0026 Kubernetes","uri":"/docker/"},{"categories":null,"content":"About Docker Problem: It works on my machine, but not works on others' Solution: VM Docker Docker is a technology for creating and running containers, so we don’t need redudent VMs! Docker allows different machines to share the same environments by using sharing docker image and create same containers ","date":"2022-04-22","objectID":"/docker/:1:0","tags":null,"title":"Docker \u0026 Kubernetes","uri":"/docker/"},{"categories":null,"content":"Docker images DockerFile + App files –\u003e Docker –\u003e Image (shared to others) Docker image explains what your environment looks like Docker image contains everything a container needs to run: Application runtime (JDK/Python/NodeJS) Application code Dependencies ","date":"2022-04-22","objectID":"/docker/:2:0","tags":null,"title":"Docker \u0026 Kubernetes","uri":"/docker/"},{"categories":null,"content":"When run docker images, what happens? Download images from Docker hub Running locally in a container A Container is a collection of one or more processes, organized under a single name and identifier. A container is isolated from the other processes running within a computing environment, be it a physical computer or a virtual machine (VM). ","date":"2022-04-22","objectID":"/docker/:2:1","tags":null,"title":"Docker \u0026 Kubernetes","uri":"/docker/"},{"categories":null,"content":"Run docker containers on Local machine Cloud Azure: Azure Container Service AWS: Elastic Container Service ","date":"2022-04-22","objectID":"/docker/:3:0","tags":null,"title":"Docker \u0026 Kubernetes","uri":"/docker/"},{"categories":null,"content":"Docker commands More commands docker --version docker run -p 5000:5000 abc/to-do-rest-api:1.0.0.RELEASE docker run -p 5000:5000 -d abc/to-do-rest-api:1.0.0.RELEASE // run in background docker images docker images history [image-id] docker image remove [image-id] // remove from local docker tag [repo-name].RELEASE [repo-name]:latest docker container stop [container-id] // shutdown container docker container ls docker container pause [container-id] docker container umpause [container-id] docker container inspect [container-id] docker events docker stats docker system df ","date":"2022-04-22","objectID":"/docker/:4:0","tags":null,"title":"Docker \u0026 Kubernetes","uri":"/docker/"},{"categories":null,"content":"How do we build an image? We use docker file to specify image Think of building a machine from scratch (OS, Environment, Dependencies…) Dockerfile Example FROM python:3 // Docker pull Python \u0026 OS image from DockerHub WORKDIR /usr/src/app COPY requirements.txt . // Copy Python dependencies to current Docker workdir RUN pip install --no-cache-dir -r requirements.txt // Install Python dependencies COPY . . // copy local files to current docker workdir CMD [\"python\", \"app.py\"] // run on docker machine ","date":"2022-04-22","objectID":"/docker/:5:0","tags":null,"title":"Docker \u0026 Kubernetes","uri":"/docker/"},{"categories":null,"content":"Docker compose Config a YAML file, launch multi-container Docker applications docker-compose.yml version: '3' services: web: build: ./web ports: - \"5000:5000\" db: build: ./db Basics ","date":"2022-04-22","objectID":"/docker/:6:0","tags":null,"title":"Docker \u0026 Kubernetes","uri":"/docker/"},{"categories":null,"content":"Architecture Docker Client(Terminal) Docker Engine Containers Local Images Image Registry Kubernetes ","date":"2022-04-22","objectID":"/docker/:7:0","tags":null,"title":"Docker \u0026 Kubernetes","uri":"/docker/"},{"categories":null,"content":"What is Kubernetes Kubernetes is a container orchestration option Kubernetes groups the containers that support a single application or microservice into a pod. A pod is exposed to the network by way of another Kubernetes abstraction called a service. In short, the network knows about Kubernetes services and a service knows about the pod(s) that has its logic. Within each pod is one or many containers that realize the logic in the given pod. Kubernetes is a tool for running a bunch of different containsers. We give it some configs to describe how we want our containers to run and interact with each other Pull image from docker hub \u0026 Deploy it to Kubernetes Expose service ","date":"2022-04-22","objectID":"/docker/:8:0","tags":null,"title":"Docker \u0026 Kubernetes","uri":"/docker/"},{"categories":null,"content":"Why we want Kubernetes We can run Kubernets on: AWS - Elastic Kubernetes Service (EKS) Azure - Azure Kubernetes Service (AKS) GCP - Google Kubernetes Engine (GKE) Pros: Service Discover: Makes communications between services easy Auto scaling: Scale containers based on demand Load Balancer: Distribute load among muliple instances of a microservice Deployment: Release new versions without shutting service down ","date":"2022-04-22","objectID":"/docker/:9:0","tags":null,"title":"Docker \u0026 Kubernetes","uri":"/docker/"},{"categories":null,"content":"Terminology A pod is a wrapper of a set of containers Pod contains: Name Namespace Priority PriorityClassName Node Labels Status IP Controlled by Containers Contianer ID Image Image ID A replica set ensures that a specific number of pods are always running A deploymnet ensures that a release upgrade happens without a down time Split traffic to V1 and V2 by 50% Rolling update (↑ V2 ↓ V1 per instance) Service: takes care of the communications between pods thru a permanent lifetime address (cuz pods might be shut down and broght up with new IPs) Master Node: Distirbuted Database All config changes, servives deployments we create, scaling operations are stored here Have multiple replica of this ensures data backup API Server When run kubectl, it enalbes Google cloud console talks to Kuberenetes cluster Scheduler Assign pods to appropriate nodes Controller Manager Manage overall health of cluster Node: Pods Node Agent Monitor nodes and communicate to master node Networking component Container runtime ","date":"2022-04-22","objectID":"/docker/:10:0","tags":null,"title":"Docker \u0026 Kubernetes","uri":"/docker/"},{"categories":null,"content":"WorkFlow What it takes to move a Docker conatiner to a Kubernetes Cluster Docker Image from a Dockerfile Kubernetes config file (YAML) Config file: written in YAML, it tells kubernetes about different deployments, pods, and services that we want to create (what our cluster is running) config file eg (xxx.yaml) apiVersion: v1 kind: Pod metadata: name: posts spec: containers: - name: posts image: abc/posts:0.0.1 ","date":"2022-04-22","objectID":"/docker/:11:0","tags":null,"title":"Docker \u0026 Kubernetes","uri":"/docker/"},{"categories":null,"content":"Kubernetes commands In cloud shell docker run -p 8080:8080 in28min/hello-world-rest-api:0.0.1.RELEASE kubectl create deployment hello-world-rest-api --image=in28min/hello-world-rest-api:0.0.1.RELEASE kubectl expose deployment hello-world-rest-api --type=LoadBalancer --port=8080 kubectl scale deployment hello-world-rest-api --replicas=3 kubectl delete pod hello-world-rest-api-58ff5dd898-62l9d kubectl autoscale deployment hello-world-rest-api --max=10 --cpu-percent=70 kubectl edit deployment hello-world-rest-api #minReadySeconds: 15 kubectl set image deployment hello-world-rest-api hello-world-rest-api=in28min/hello-world-rest-api:0.0.2.RELEASE gcloud container clusters get-credentials in28minutes-cluster --zone us-central1-a --project solid-course-258105 kubectl create deployment hello-world-rest-api --image=in28min/hello-world-rest-api:0.0.1.RELEASE kubectl expose deployment hello-world-rest-api --type=LoadBalancer --port=8080 kubectl set image deployment hello-world-rest-api hello-world-rest-api=DUMMY_IMAGE:TEST kubectl get events --sort-by=.metadata.creationTimestamp kubectl set image deployment hello-world-rest-api hello-world-rest-api=in28min/hello-world-rest-api:0.0.2.RELEASE kubectl get events --sort-by=.metadata.creationTimestamp kubectl get componentstatuses kubectl get pods --all-namespaces kubectl get events kubectl get pods kubectl get replicaset kubectl get deployment kubectl get service kubectl get pods -o wide kubectl explain pods kubectl get pods -o wide kubectl describe pod hello-world-rest-api-58ff5dd898-9trh2 kubectl get replicasets kubectl get replicaset kubectl scale deployment hello-world-rest-api --replicas=3 kubectl get pods kubectl get replicaset kubectl get events kubectl get events --sort.by=.metadata.creationTimestamp kubectl get rs kubectl get rs -o wide kubectl set image deployment hello-world-rest-api hello-world-rest-api=DUMMY_IMAGE:TEST kubectl get rs -o wide kubectl get pods kubectl describe pod hello-world-rest-api-85995ddd5c-msjsm kubectl get events --sort-by=.metadata.creationTimestamp kubectl set image deployment hello-world-rest-api hello-world-rest-api=in28min/hello-world-rest-api:0.0.2.RELEASE kubectl get events --sort-by=.metadata.creationTimestamp kubectl get pods -o wide kubectl delete pod hello-world-rest-api-67c79fd44f-n6c7l kubectl get pods -o wide kubectl delete pod hello-world-rest-api-67c79fd44f-8bhdt gcloud container clusters get-credentials in28minutes-cluster --zone us-central1-c --project solid-course-258105 docker login docker push in28min/mmv2-currency-exchange-service:0.0.11-SNAPSHOT docker push in28min/mmv2-currency-conversion-service:0.0.11-SNAPSHOT kubectl create deployment currency-exchange --image=in28min/mmv2-currency-exchange-service:0.0.11-SNAPSHOT kubectl expose deployment currency-exchange --type=LoadBalancer --port=8000 kubectl get svc kubectl get services kubectl get pods kubectl get po kubectl get replicaset kubectl get rs kubectl get all kubectl create deployment currency-conversion --image=in28min/mmv2-currency-conversion-service:0.0.11-SNAPSHOT kubectl expose deployment currency-conversion --type=LoadBalancer --port=8100 kubectl get svc --watch kubectl get deployments kubectl get deployment currency-exchange -o yaml \u003e\u003e deployment.yaml kubectl get service currency-exchange -o yaml \u003e\u003e service.yaml kubectl diff -f deployment.yaml kubectl apply -f deployment.yaml kubectl delete all -l app=currency-exchange kubectl delete all -l app=currency-conversion kubectl rollout history deployment currency-conversion kubectl rollout history deployment currency-exchange kubectl rollout undo deployment currency-exchange --to-revision=1 kubectl logs currency-exchange-9fc6f979b-2gmn8 kubectl logs -f currency-exchange-9fc6f979b-2gmn8 kubectl autoscale deployment currency-exchange --min=1 --max=3 --cpu-percent=5 kubectl get hpa kubectl top pod kubectl top nodes kubectl get hpa kubectl delete hpa currency-exchange kubectl create configmap currency-conversion --from-literal=CURRE","date":"2022-04-22","objectID":"/docker/:12:0","tags":null,"title":"Docker \u0026 Kubernetes","uri":"/docker/"},{"categories":null,"content":"Docker vs Kubernetes Basically, Docker deinfes/creates/runs containers. Kubernetes manages containers, it doesn’t make containers. ref: https://tanzu.vmware.com/developer/guides/from-docker-to-kubernetes/ ","date":"2022-04-22","objectID":"/docker/:13:0","tags":null,"title":"Docker \u0026 Kubernetes","uri":"/docker/"},{"categories":null,"content":"MicroService Take every app function and put it in its own service Runs in its own container Communicate via APIs But if each microservice is implemented in different languages/environment, how do we deploy? Deployment: Use Docker ! Put each microservice into containers ","date":"2022-04-22","objectID":"/microservices/:1:0","tags":null,"title":"Microservices vs Monolith","uri":"/microservices/"},{"categories":null,"content":"Pros Flexibility (each microservice can be built in different languages/technologies) Less risk in change Independent scaling Faster release cycles ","date":"2022-04-22","objectID":"/microservices/:1:1","tags":null,"title":"Microservices vs Monolith","uri":"/microservices/"},{"categories":null,"content":"Monolith Server-side systme based on single application ","date":"2022-04-22","objectID":"/microservices/:2:0","tags":null,"title":"Microservices vs Monolith","uri":"/microservices/"},{"categories":null,"content":"Pros Good for small team Less complex Less duplication Run fast ","date":"2022-04-22","objectID":"/microservices/:2:1","tags":null,"title":"Microservices vs Monolith","uri":"/microservices/"},{"categories":null,"content":"Cons Highly dependent (single point of failure) Language/Framework Growth Scaling issue Complex deployment ","date":"2022-04-22","objectID":"/microservices/:2:2","tags":null,"title":"Microservices vs Monolith","uri":"/microservices/"},{"categories":null,"content":"Spring Boot ","date":"2022-04-22","objectID":"/microservices/:3:0","tags":null,"title":"Microservices vs Monolith","uri":"/microservices/"},{"categories":null,"content":"Goal Enable quickly built applications Provide common non-functional features ","date":"2022-04-22","objectID":"/microservices/:3:1","tags":null,"title":"Microservices vs Monolith","uri":"/microservices/"},{"categories":null,"content":"Not Spring boot does NOT generate code Spring boot is NOT an application server or a web server ","date":"2022-04-22","objectID":"/microservices/:3:2","tags":null,"title":"Microservices vs Monolith","uri":"/microservices/"},{"categories":null,"content":"Features Quick starter projects with auto configuration Web (Login, spring mvc) JPA (DB) ","date":"2022-04-22","objectID":"/microservices/:3:3","tags":null,"title":"Microservices vs Monolith","uri":"/microservices/"},{"categories":null,"content":"start.spring.io starter apps/dependencies Spring Web @RestController @GetMapping handles REST API MVC Spring Boot Actuator Monitor and manage application Spring Boot DevTools Provide fast app restarts, livereload ","date":"2022-04-22","objectID":"/microservices/:4:0","tags":null,"title":"Microservices vs Monolith","uri":"/microservices/"},{"categories":null,"content":"Spring vs Spring Boot vs Spring MVC ","date":"2022-04-22","objectID":"/microservices/:5:0","tags":null,"title":"Microservices vs Monolith","uri":"/microservices/"},{"categories":null,"content":"Spring Framework Dependency Injection: Takes care of defining beans, dependencies, how to bind components ","date":"2022-04-22","objectID":"/microservices/:5:1","tags":null,"title":"Microservices vs Monolith","uri":"/microservices/"},{"categories":null,"content":"Spring MVC Web applications ","date":"2022-04-22","objectID":"/microservices/:5:2","tags":null,"title":"Microservices vs Monolith","uri":"/microservices/"},{"categories":null,"content":"Spring Boot Autoconfig // 143 Questions: What is spring boot/cloud? Distirbuted system regarding microservice load balancer what does it do? what is maven $$$$$$$$$$ Draw a overall blueprint of each model Why use these techs $$$$$$$$$$ Keyword Distributed system Maven Java Spring Boot? Dependencies: Spring Boot Devtools Spring Boot Actuator Spring Web(REST, MVC) Config Client (Connect to spring cloud config) REST H2 DB, SQL with JPA (Currency from / to, exchange rate) Build routes with Eureka naming server and redirect all requests thru Spring cloud gateway (Assigen different ports to different server) Circuit Breaker framwork: Resilience4j (fallback methods if ms is down) Zipkin as a distributed tracing server (as a container) connected to all ms ( to trace requests accross ms) // 174 What if distributed tracing server is down? Use Rabbit MQ Google Cloud Kubernetes ","date":"2022-04-22","objectID":"/microservices/:5:3","tags":null,"title":"Microservices vs Monolith","uri":"/microservices/"},{"categories":null,"content":"What is web service Software system designed to support interoperable machine-to-machine interaction over a network. Three keys: machine to machine (todo service is not) Interoperable (not platform dependent) Over a network ","date":"2022-04-18","objectID":"/web-service/:0:0","tags":null,"title":"Web Service","uri":"/web-service/"},{"categories":null,"content":"Different kinds of web services ","date":"2022-04-18","objectID":"/web-service/:1:0","tags":null,"title":"Web Service","uri":"/web-service/"},{"categories":null,"content":"SOAP Use XML as exchange format Adhere to Structure: Envelope - Header - Body ","date":"2022-04-18","objectID":"/web-service/:1:1","tags":null,"title":"Web Service","uri":"/web-service/"},{"categories":null,"content":"REST The format of request/response is HTTP resources A resource has an URI, it is what you want to present in your application A resource can have different representations XML HTML JSON (most popular) Define and perfom actions on resources using HTTP POST/GET/PUT/DELETE How to build web service ","date":"2022-04-18","objectID":"/web-service/:1:2","tags":null,"title":"Web Service","uri":"/web-service/"},{"categories":null,"content":"How does applications communicate Application \u003c==request, response==\u003e web service How to make communication platform independent? Use data exchange format: XML JSON Transport: HTTP MQ ","date":"2022-04-18","objectID":"/web-service/:2:0","tags":null,"title":"Web Service","uri":"/web-service/"},{"categories":null,"content":"Tools Browser Curl Postman Browser makes it hard to send Post/Put/Delete command, that’s why we use Postman ","date":"2022-04-18","objectID":"/web-service/:3:0","tags":null,"title":"Web Service","uri":"/web-service/"},{"categories":["General Tech"],"content":"Spotlight doesn't work","date":"2022-03-26","objectID":"/enable-spotlight/","tags":["Mac","Spotlight"],"title":"Enable Spotlight search on Mac","uri":"/enable-spotlight/"},{"categories":["General Tech"],"content":"Method 1 Navigate to System Preferences Spotlights Privacy Add your local disk to the list Remove your local disk from the list The above steps will reindex spotlight on the selected disk ","date":"2022-03-26","objectID":"/enable-spotlight/:1:0","tags":["Mac","Spotlight"],"title":"Enable Spotlight search on Mac","uri":"/enable-spotlight/"},{"categories":["General Tech"],"content":"Method 2 In terminal run: sudo mdutil -E / sudo mdutil -a -i on Above commands fixed everything for me ","date":"2022-03-26","objectID":"/enable-spotlight/:2:0","tags":["Mac","Spotlight"],"title":"Enable Spotlight search on Mac","uri":"/enable-spotlight/"},{"categories":null,"content":"About me My name is Kehan. I am pursuing a master’s degree of computer science at Texas A\u0026M. I like coding, basketball, guitar, cooking, writing ","date":"2022-03-25","objectID":"/about/:1:0","tags":null,"title":"About","uri":"/about/"},{"categories":null,"content":"About this site My blog is powered by Hugo, my theme is LoveIt. My site is hosted on GitHub, deployed on Netlify. See detailed blog building process here ","date":"2022-03-25","objectID":"/about/:2:0","tags":null,"title":"About","uri":"/about/"},{"categories":["General Tech"],"content":"Add Google Analytics to Hugo Blog","date":"2022-03-05","objectID":"/add-google-analytics/","tags":["Blog","Hugo","Google Analytics","JavaScript"],"title":"Add Google Analytics to Hugo Blog","uri":"/add-google-analytics/"},{"categories":["General Tech"],"content":"Google Analytics Register a google analytics account Get your measurement ID that looks like below G-6ED0IWOAJK Get gtag js script \u003c!-- Global site tag (gtag.js) - Google Analytics --\u003e \u003cscript async src=\"https://www.googletagmanager.com/gtag/js?id=G-6ED0IWOAJK\"\u003e\u003c/script\u003e \u003cscript\u003e window.dataLayer = window.dataLayer || []; function gtag(){dataLayer.push(arguments);} gtag('js', new Date()); gtag('config', 'G-6ED0KEHXFZ'); \u003c/script\u003e ","date":"2022-03-05","objectID":"/add-google-analytics/:1:0","tags":["Blog","Hugo","Google Analytics","JavaScript"],"title":"Add Google Analytics to Hugo Blog","uri":"/add-google-analytics/"},{"categories":["General Tech"],"content":"Hugo blog Find config.toml file, enable google analytics as below enableGoogleAnalytics = true trackingCodeType = \"gtag\" trackingID = \"G-6ED0IWOAJK\" This is my settings above, you may just need googleAnalytics = \"G-6ED0IWOAJK\" Add gtag script to path: /themes/your-theme/layouts/_internal/google_analytics_async.html You may need to create a new folder and new html file Paste gtag js script above to the html file Add template code to path: /themes/your-theme/layouts/partials/header.html {{ if not .Site.IsServer }} {{ template \"_internal/google_analytics_async.html\" . }} {{ end }} You only need the second line but the if statement prevents local builds being tracked by GA ","date":"2022-03-05","objectID":"/add-google-analytics/:2:0","tags":["Blog","Hugo","Google Analytics","JavaScript"],"title":"Add Google Analytics to Hugo Blog","uri":"/add-google-analytics/"},{"categories":["General Tech"],"content":"Google Analytics should be about to work! If it doesn’t work, wait for a while. I added GA late at night and it didn’t make an effect immediately. The next day I woke up, It worked! 😁 ","date":"2022-03-05","objectID":"/add-google-analytics/:3:0","tags":["Blog","Hugo","Google Analytics","JavaScript"],"title":"Add Google Analytics to Hugo Blog","uri":"/add-google-analytics/"},{"categories":["General Tech"],"content":"Ultimate API guide","date":"2022-03-01","objectID":"/what-is-api/","tags":["Web Application","API","HTTP","What is"],"title":"What is API","uri":"/what-is-api/"},{"categories":["General Tech"],"content":"What is API Application Programming Interface: allows two applications to talk to each other ","date":"2022-03-01","objectID":"/what-is-api/:0:1","tags":["Web Application","API","HTTP","What is"],"title":"What is API","uri":"/what-is-api/"},{"categories":["General Tech"],"content":"What is REST API REST (Representational State Transfer): A set of functions for developers to perform requests and receive responses using HTTP protocol ","date":"2022-03-01","objectID":"/what-is-api/:0:2","tags":["Web Application","API","HTTP","What is"],"title":"What is API","uri":"/what-is-api/"},{"categories":["General Tech"],"content":"Challenges under API testing API Documentation (need endpoint, parameters, resources, data) Access to DB (Validate response by comparing response to DB) Authorization overhead (Handle tokens) ","date":"2022-03-01","objectID":"/what-is-api/:0:3","tags":["Web Application","API","HTTP","What is"],"title":"What is API","uri":"/what-is-api/"},{"categories":["General Tech"],"content":"Core components of HTTP request HTTP request methods URI Resources and parameters Request header (JSON, XML) Request body (message content) ","date":"2022-03-01","objectID":"/what-is-api/:0:4","tags":["Web Application","API","HTTP","What is"],"title":"What is API","uri":"/what-is-api/"},{"categories":["General Tech"],"content":"What is Payload Payload/body is secured input data sent to API In JSON ","date":"2022-03-01","objectID":"/what-is-api/:0:5","tags":["Web Application","API","HTTP","What is"],"title":"What is API","uri":"/what-is-api/"},{"categories":["General Tech"],"content":"What is JSON JavaScript Object Notation Data format represented as String-text ","date":"2022-03-01","objectID":"/what-is-api/:0:6","tags":["Web Application","API","HTTP","What is"],"title":"What is API","uri":"/what-is-api/"},{"categories":["General Tech"],"content":"Authentication Techniques used in API’s Session/Cookie based Authentication Basic Authentication Digest Authentication OAuth ","date":"2022-03-01","objectID":"/what-is-api/:0:7","tags":["Web Application","API","HTTP","What is"],"title":"What is API","uri":"/what-is-api/"},{"categories":["General Tech"],"content":"Why API testing is suitable for automation testing API testing is: Light-weight More stable than UI testing ","date":"2022-03-01","objectID":"/what-is-api/:0:8","tags":["Web Application","API","HTTP","What is"],"title":"What is API","uri":"/what-is-api/"},{"categories":["General Tech"],"content":"What to verify in API testing Verify the accuracy of data (if is as expected) Check HTTP status code Response time Error codes if API return errors Check Authorization Non-functional testing ","date":"2022-03-01","objectID":"/what-is-api/:0:9","tags":["Web Application","API","HTTP","What is"],"title":"What is API","uri":"/what-is-api/"},{"categories":["General Tech"],"content":"Path parameter and Query parameter // below is an API request URL http:/abcd.com/orders/11234?location=IND // End point: http:/abcd.com // Resource: orders After / : path parameter After ? : query parameter ","date":"2022-03-01","objectID":"/what-is-api/:0:10","tags":["Web Application","API","HTTP","What is"],"title":"What is API","uri":"/what-is-api/"},{"categories":["General Tech"],"content":"API testing vs UI testing API: back-end UI: front-end ","date":"2022-03-01","objectID":"/what-is-api/:0:11","tags":["Web Application","API","HTTP","What is"],"title":"What is API","uri":"/what-is-api/"},{"categories":["General Tech"],"content":"Soap WebServices Simple Object Access Protocol: it is a XML based message protocol ","date":"2022-03-01","objectID":"/what-is-api/:0:12","tags":["Web Application","API","HTTP","What is"],"title":"What is API","uri":"/what-is-api/"},{"categories":["General Tech"],"content":"Serialization \u0026\u0026 Deserialization Serialization: Convert Java obj –\u003e JSON (Request body/payload) Deserialization: Convert JSON –\u003e Java obj ","date":"2022-03-01","objectID":"/what-is-api/:0:13","tags":["Web Application","API","HTTP","What is"],"title":"What is API","uri":"/what-is-api/"},{"categories":["General Tech"],"content":"JSON path example courses[0].details.site ","date":"2022-03-01","objectID":"/what-is-api/:0:14","tags":["Web Application","API","HTTP","What is"],"title":"What is API","uri":"/what-is-api/"},{"categories":["General Tech"],"content":"API calling examples Python: import requests r = requests.get(\"https://www.pythonhow.com/real-estate/rock-springs-wy/LCWYROCKSPRINGS\", headers={'User-agent': 'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:61.0) Gecko/20100101 Firefox/61.0'}) c=r.content Dart: final response = await http.post(url, body: json.encode(requestModel.toJson())); print(response.headers['set-cookie']); print(response.statusCode); final response = await http.post(url, headers: {'Authorization': token}, body: json.encode(requestModel.toJson())); ","date":"2022-03-01","objectID":"/what-is-api/:0:15","tags":["Web Application","API","HTTP","What is"],"title":"What is API","uri":"/what-is-api/"},{"categories":["General Tech"],"content":"Build your API with Express.JS","date":"2022-02-20","objectID":"/express-restapi/","tags":["Web Application","API","HTTP","JavaScript","Express"],"title":"Rest API with Express.JS","uri":"/express-restapi/"},{"categories":["General Tech"],"content":"To include packages/files ","date":"2022-02-20","objectID":"/express-restapi/:1:0","tags":["Web Application","API","HTTP","JavaScript","Express"],"title":"Rest API with Express.JS","uri":"/express-restapi/"},{"categories":["General Tech"],"content":"Include packages: packages are from package.json const express = require('express'); const router = express.Router(); router.get('/', (req, res) =\u003e res.send('Profile route')); const jwt = require('jsonwebtoken'); ","date":"2022-02-20","objectID":"/express-restapi/:1:1","tags":["Web Application","API","HTTP","JavaScript","Express"],"title":"Rest API with Express.JS","uri":"/express-restapi/"},{"categories":["General Tech"],"content":"Inlucde route/file: // db.js module.exports = connectDB; // In server.js const connectDB = require('./config/db') connectDB(); ","date":"2022-02-20","objectID":"/express-restapi/:1:2","tags":["Web Application","API","HTTP","JavaScript","Express"],"title":"Rest API with Express.JS","uri":"/express-restapi/"},{"categories":["General Tech"],"content":"File return module.exports = connectDB; module.exports = router; ","date":"2022-02-20","objectID":"/express-restapi/:2:0","tags":["Web Application","API","HTTP","JavaScript","Express"],"title":"Rest API with Express.JS","uri":"/express-restapi/"},{"categories":["General Tech"],"content":"Try catch const connectDB = async () =\u003e { try{ await mongoose.connect(db, { useNewUrlParser: true }); console.log('MongoDB Connected!'); } catch(err){ console.error(err.message); // Exit process with failure process.exit(1); } } ","date":"2022-02-20","objectID":"/express-restapi/:3:0","tags":["Web Application","API","HTTP","JavaScript","Express"],"title":"Rest API with Express.JS","uri":"/express-restapi/"},{"categories":["General Tech"],"content":"Build Express API: ","date":"2022-02-20","objectID":"/express-restapi/:4:0","tags":["Web Application","API","HTTP","JavaScript","Express"],"title":"Rest API with Express.JS","uri":"/express-restapi/"},{"categories":["General Tech"],"content":"Hierarchy // server.js const express = require('express'); const app = express() app.get('/', (req, res) =\u003e res.send('API Running')); // Define Routes app.use('/api/users', require('./routes/api/users')); app.use('/api/auth', require('./routes/api/auth')); app.use('/api/profile', require('./routes/api/profile')); app.use('/api/posts', require('./routes/api/posts')); const PORT = process.env.PORT || 5000; //app.listen() starts a port and host to listen to incoming requests from a client. app.listen(PORT, () =\u003e console.log(`Server started on port ${PORT}`)); //////////////////////////////////////////////////////////////////////// // profile.js const express = require('express'); const router = express.Router(); // Postman --Get request--\u003e http://localhost:5000/api/profile // res.send --\u003e 'Profile route' --\u003e Postman router.get('/', (req, res) =\u003e res.send('Profile route')); module.exports = router; ","date":"2022-02-20","objectID":"/express-restapi/:5:0","tags":["Web Application","API","HTTP","JavaScript","Express"],"title":"Rest API with Express.JS","uri":"/express-restapi/"},{"categories":["General Tech"],"content":"Notes regarding REST API Requests are third party requests sent to our sever(such as Postman) Router.post/get/put/delete: it is how we handle incoming requests ( requests sent to our server) router.post/get/put/delete('/', auth, async (req, res) =\u003e { do some response here}); Express.Router() use req,res to handle requests req: contains POST request JSON body const {name, email, password} = req.body res: is whatever info the server sends back res.status(500).send('Server error'); res.status(400).json({errors: [{msg: 'User already exists'}]}); res.json({ msg: 'User deleted' }); ","date":"2022-02-20","objectID":"/express-restapi/:6:0","tags":["Web Application","API","HTTP","JavaScript","Express"],"title":"Rest API with Express.JS","uri":"/express-restapi/"},{"categories":["General Tech"],"content":"More about REST API POST: Requester sends info and data to a server POST request has a body (JSON) and a header (Content-Type, application/json , x-auth-token) GET: DON’T have a body When a request is sent to our sever’s route, our server responds a message back (router.get(’/’, (req, res) =\u003e res.send(‘Profile route’));) Can have a header (x-auth-token) PUT: Work like a POST, have body \u0026 header. But it meanly used to update a resource Delete: Delete a resource in DB, usually require a x-auth-token in the header ","date":"2022-02-20","objectID":"/express-restapi/:7:0","tags":["Web Application","API","HTTP","JavaScript","Express"],"title":"Rest API with Express.JS","uri":"/express-restapi/"},{"categories":["General Tech"],"content":"HTTP methods and status code","date":"2022-02-07","objectID":"/http/","tags":["Network","HTTP"],"title":"HTTP","uri":"/http/"},{"categories":["General Tech"],"content":"HTTP methods GET: Retrieve data from a server only HTTP GET won’t have payload or request body, just send URL only, it simply retrieves data POST: Add data (create a new object) on the server PUT: Update an existing object or resource in a server DELETE: Delete data from a server Remove is NOT an HTTP verb ","date":"2022-02-07","objectID":"/http/:1:0","tags":["Network","HTTP"],"title":"HTTP","uri":"/http/"},{"categories":["General Tech"],"content":"HTTP status code cheatsheet 1xx status codes: Informational requests 2xx status codes: Successful requests 3xx status codes: Redirects 4xx status codes: Client errors 5xx status codes: Server errors Code Status Description 200 OK The request is successful 201 Created A new resource was successfuly created 301 Mising parameter 400 Bad request The request is invalid (My problem) 401 Unauthorized Requires authentication 403 Forbidden The client is authenticated but doesn't have permission to access the requested resource 404 Not Found The requested resource was not found (API's problem) 405 Method not allowed HTTP request method is not supported (use GET to update) 500 Internal Server error 503 Server unavailable Ref: https://stackoverflow.com/questions/2342579/http-status-code-for-update-and-delete detailed cheatsheet: https://www.exai.com/blog/http-status-codes-cheat-sheet ","date":"2022-02-07","objectID":"/http/:2:0","tags":["Network","HTTP"],"title":"HTTP","uri":"/http/"},{"categories":["General Tech"],"content":"SOA Basics","date":"2022-02-05","objectID":"/what-is-soa/","tags":["Web Application","Sotware Architecture","What is"],"title":"What is SOA","uri":"/what-is-soa/"},{"categories":["General Tech"],"content":"What is SOA Service Oriented Architecture: Distributed system architecture where all components are designed to be services eg. Cloud solutions are based on SOA ","date":"2022-02-05","objectID":"/what-is-soa/:0:1","tags":["Web Application","Sotware Architecture","What is"],"title":"What is SOA","uri":"/what-is-soa/"},{"categories":["General Tech"],"content":"Key attributes Services over components Interoperability \u0026 Cross platform Loose coupling \u0026 Distributed Abstraction against complexity ","date":"2022-02-05","objectID":"/what-is-soa/:0:2","tags":["Web Application","Sotware Architecture","What is"],"title":"What is SOA","uri":"/what-is-soa/"},{"categories":["General Tech"],"content":"SOA Components Services: Pieces of software that are autonomous, self-contained and accessible Automic services: well-defined and independent Composite: fusion of two or more automic services Types: frontend, integration, business, public enterprise, infrastructure ESB: Enterprise bus (backbone of a SOA system) Providing connectivity Data transformation Routing Security SDR: Service description repository: for service consumer to use services Service consumer: Internal: Use ESB to send request and receive responses from services External: Use SDR to call the service API: Single entry point for all clients Translate requests and route them to apropriate service ","date":"2022-02-05","objectID":"/what-is-soa/:0:3","tags":["Web Application","Sotware Architecture","What is"],"title":"What is SOA","uri":"/what-is-soa/"},{"categories":["General Tech"],"content":"SOA principles Standard Service Contracts Interoperability Composability Abstraction Discoverability Statelessness ","date":"2022-02-05","objectID":"/what-is-soa/:0:4","tags":["Web Application","Sotware Architecture","What is"],"title":"What is SOA","uri":"/what-is-soa/"},{"categories":["General Tech"],"content":"Pros \u0026 Cons Pros: Reusability Maintainability Scalability \u0026 Availability Platform independence Cons: Complex service management Increased overhead ","date":"2022-02-05","objectID":"/what-is-soa/:0:5","tags":["Web Application","Sotware Architecture","What is"],"title":"What is SOA","uri":"/what-is-soa/"},{"categories":["General Tech"],"content":"Ultimate React Guide","date":"2022-02-02","objectID":"/react/","tags":["Web Application","JavaScript","React"],"title":"All you need to know about React","uri":"/react/"},{"categories":["General Tech"],"content":"What is React A JavaScript library Use component-based approach All individual entities become completely reusable and independent of each other Rendering the application is easy and not dependent on other components of the UI 2011 developed by Facebok developer Advantages: Easy for UI testing High readability Both client-side and server-side Easy understanding and boost efficiency Disadvantages: Writing code is compliciated Hard to cope its syntaxes and methods React is a simple library, not a complete framework, so it calls for dependency ","date":"2022-02-02","objectID":"/react/:0:1","tags":["Web Application","JavaScript","React"],"title":"All you need to know about React","uri":"/react/"},{"categories":["General Tech"],"content":"Angular vs React ","date":"2022-02-02","objectID":"/react/:0:2","tags":["Web Application","JavaScript","React"],"title":"All you need to know about React","uri":"/react/"},{"categories":["General Tech"],"content":"Important feature of React React makes use of a single-direction data flow model It deals with complete server-side data processing and handling React uses Virtual DOM that has many advantages ","date":"2022-02-02","objectID":"/react/:0:3","tags":["Web Application","JavaScript","React"],"title":"All you need to know about React","uri":"/react/"},{"categories":["General Tech"],"content":"What is DOM (Document object model) When load HTML file, DOM is the representation of the same HTML document in a different format for Javascript access Javascript looks at objects blow: Element Node: head tag Text Node: some text Attribute Node: id = “div1” ","date":"2022-02-02","objectID":"/react/:0:4","tags":["Web Application","JavaScript","React"],"title":"All you need to know about React","uri":"/react/"},{"categories":["General Tech"],"content":"What is virtual DOM A simple Javascript object that is the exact copy of the corresponding real DOM ","date":"2022-02-02","objectID":"/react/:0:5","tags":["Web Application","JavaScript","React"],"title":"All you need to know about React","uri":"/react/"},{"categories":["General Tech"],"content":"Difference between Virtual DOM and Real DOM ","date":"2022-02-02","objectID":"/react/:0:6","tags":["Web Application","JavaScript","React"],"title":"All you need to know about React","uri":"/react/"},{"categories":["General Tech"],"content":"What is JSX? Javascript XML that includes HTML and Javascript syntax Browser cannot read JSX files directly, it can only read the objects provided by JavaScript render(){ return( \u003cdiv\u003e \u003ch1\u003e Hello what\u003c/h1\u003e \u003c/div\u003e ); } ","date":"2022-02-02","objectID":"/react/:0:7","tags":["Web Application","JavaScript","React"],"title":"All you need to know about React","uri":"/react/"},{"categories":["General Tech"],"content":"How rendering works Use render() function Once the function is called, it returns an element that represents a DOM component ","date":"2022-02-02","objectID":"/react/:0:8","tags":["Web Application","JavaScript","React"],"title":"All you need to know about React","uri":"/react/"},{"categories":["General Tech"],"content":"Rendering slow, how to fix it? React.memo(): prevent all of the unnecessary re-rendering PureComponent: ensure the unnecessary re-rendering ","date":"2022-02-02","objectID":"/react/:0:9","tags":["Web Application","JavaScript","React"],"title":"All you need to know about React","uri":"/react/"},{"categories":["General Tech"],"content":"What are states A source of data or objects that control aspects such as component behavior and rendering States are used to create dynamic and interactive components ","date":"2022-02-02","objectID":"/react/:0:10","tags":["Web Application","JavaScript","React"],"title":"All you need to know about React","uri":"/react/"},{"categories":["General Tech"],"content":"What are props Props: properities Props are read-only components that are immutable in nature props is passed bown from parents to child components (single directional flow in data al all times) ","date":"2022-02-02","objectID":"/react/:0:11","tags":["Web Application","JavaScript","React"],"title":"All you need to know about React","uri":"/react/"},{"categories":["General Tech"],"content":"What is =\u003e It allows users to manually bind components easily \u003cMyinput onChange={this.handleChange.bind(this)}/\u003e \u003cMyinput onChange={(e) =\u003e this.handleChange.bind(e)}/\u003e ","date":"2022-02-02","objectID":"/react/:0:12","tags":["Web Application","JavaScript","React"],"title":"All you need to know about React","uri":"/react/"},{"categories":["General Tech"],"content":"create-react-app CLI (Command line interface) to start a simple project Create-react-app my-app Advantages: Support JSX Built with auto-prefixed CSS Scripts to handle JSS, CSS Fast interactive testing components ","date":"2022-02-02","objectID":"/react/:0:13","tags":["Web Application","JavaScript","React"],"title":"All you need to know about React","uri":"/react/"},{"categories":["General Tech"],"content":"Redux Redux is used to store the state of the application in a single entity. This entity is a JavaScript object. { first_name: 'Max' last_name: 'Turner' age: 21 } All of the data is retained by Redux (also called a store) Advantages: Code has to be organized, easy to work with Test is easy beceause functions are small and isolated Redux has a large community Components of Redux Action: An object that describes the call Reducer: The state change storage unit Store: the state and object tree storage View: Displays data provided by the store ","date":"2022-02-02","objectID":"/react/:0:14","tags":["Web Application","JavaScript","React"],"title":"All you need to know about React","uri":"/react/"},{"categories":["General Tech"],"content":"Three phases of a component life cycle in react 1 Initial rendering -\u003e 2 Update -\u003e 3 Unmounting 1: Involves beginning of the journey of the component to the DOM 2: The component can be updated and rendered again 3: Involves the destruction of the component and its eventual removal from the DOM ","date":"2022-02-02","objectID":"/react/:0:15","tags":["Web Application","JavaScript","React"],"title":"All you need to know about React","uri":"/react/"},{"categories":["General Tech"],"content":"What are events All the actions trigger events (Move mouse, press a key) Events perform set activities as a response to these triggers ","date":"2022-02-02","objectID":"/react/:0:16","tags":["Web Application","JavaScript","React"],"title":"All you need to know about React","uri":"/react/"},{"categories":["General Tech"],"content":"How events are created Onclick class Display extends React.Component({ show(evt){ // code here }, render(){ // Render the div with an onclick prop return( \u003cdiv onClick = {this.show}\u003eClick here \u003c/div\u003e ); } }); ","date":"2022-02-02","objectID":"/react/:0:17","tags":["Web Application","JavaScript","React"],"title":"All you need to know about React","uri":"/react/"},{"categories":["General Tech"],"content":"Flux vs Redux ","date":"2022-02-02","objectID":"/react/:0:18","tags":["Web Application","JavaScript","React"],"title":"All you need to know about React","uri":"/react/"},{"categories":["General Tech"],"content":"Synthetic events Synthetic events are objects that act as cross-browser wrappers, allowing for the use of native events Ensure that a variety of browsers can run the API ","date":"2022-02-02","objectID":"/react/:0:19","tags":["Web Application","JavaScript","React"],"title":"All you need to know about React","uri":"/react/"},{"categories":["General Tech"],"content":"Stateful components Are entities that store the changes that happen and place them into the memory The state can be changed, storing info as past, current, and future changes ","date":"2022-02-02","objectID":"/react/:0:20","tags":["Web Application","JavaScript","React"],"title":"All you need to know about React","uri":"/react/"},{"categories":["General Tech"],"content":"Controlled components Components that have the ability to maintain their state The data is completely controlled by the parent component ","date":"2022-02-02","objectID":"/react/:0:21","tags":["Web Application","JavaScript","React"],"title":"All you need to know about React","uri":"/react/"},{"categories":["General Tech"],"content":"Uncontrolled components Data gets handled by DOM and not the React component This is ususally done using refs in React ","date":"2022-02-02","objectID":"/react/:0:22","tags":["Web Application","JavaScript","React"],"title":"All you need to know about React","uri":"/react/"},{"categories":["General Tech"],"content":"Pure components Singular entities that are written in React Fast and simple to write, ensures performance is good ","date":"2022-02-02","objectID":"/react/:0:23","tags":["Web Application","JavaScript","React"],"title":"All you need to know about React","uri":"/react/"},{"categories":["General Tech"],"content":"Router \u003cswitch\u003e \u003croute exact path='/' component={Home}/\u003e \u003croute path='/posts/:id' component={Newpost}/\u003e \u003croute path='/posts' component={Post}/\u003e \u003c/switch\u003e ","date":"2022-02-02","objectID":"/react/:0:24","tags":["Web Application","JavaScript","React"],"title":"All you need to know about React","uri":"/react/"},{"categories":["General Tech"],"content":"Keys Keys are used to check all items and to track changes actively They are used to directly check if an item has been added or removed from a list ","date":"2022-02-02","objectID":"/react/:0:25","tags":["Web Application","JavaScript","React"],"title":"All you need to know about React","uri":"/react/"},{"categories":["General Tech"],"content":"Is there a way to avoid binding Define the event handler as an inline arrow function =\u003e Use a function component along with hooks ","date":"2022-02-02","objectID":"/react/:0:26","tags":["Web Application","JavaScript","React"],"title":"All you need to know about React","uri":"/react/"},{"categories":["General Tech"],"content":"Hooks Hooks are used to make use of state and other features without having to explicitly write a class ","date":"2022-02-02","objectID":"/react/:0:27","tags":["Web Application","JavaScript","React"],"title":"All you need to know about React","uri":"/react/"},{"categories":["General Tech"],"content":"Javascript append text \u003cp id=\"test\" name=\"hacker\"\u003eHi\u003c/p\u003e document.getElementById(\"test\").innerHTML += \"Some text\" ","date":"2022-02-02","objectID":"/react/:0:28","tags":["Web Application","JavaScript","React"],"title":"All you need to know about React","uri":"/react/"},{"categories":["General Tech"],"content":"OOP Ideas","date":"2022-02-01","objectID":"/oop/","tags":["OOP","What is"],"title":"What is OOP","uri":"/oop/"},{"categories":["General Tech"],"content":"Class Blue print of the objects ","date":"2022-02-01","objectID":"/oop/:0:1","tags":["OOP","What is"],"title":"What is OOP","uri":"/oop/"},{"categories":["General Tech"],"content":"Object An object is an instance of a class (Class -\u003e blueprint, Object -\u003e house) ","date":"2022-02-01","objectID":"/oop/:0:2","tags":["OOP","What is"],"title":"What is OOP","uri":"/oop/"},{"categories":["General Tech"],"content":"Constructor Initialize the state of an object ","date":"2022-02-01","objectID":"/oop/:0:3","tags":["OOP","What is"],"title":"What is OOP","uri":"/oop/"},{"categories":["General Tech"],"content":"Destructor Automatically called at the end of lifetime of an object Free up the acuired resources ","date":"2022-02-01","objectID":"/oop/:0:4","tags":["OOP","What is"],"title":"What is OOP","uri":"/oop/"},{"categories":["General Tech"],"content":"Is-A Relationship Inheritance (Parent-Child) class Apple extends Fruit { } Foo is-a Bar: public class Foo extends Bar{} ","date":"2022-02-01","objectID":"/oop/:0:5","tags":["OOP","What is"],"title":"What is OOP","uri":"/oop/"},{"categories":["General Tech"],"content":"Has-A Relationship Composition: Creating instances which have references to other objects (Objects depend on each other) class Room { Table table = new Table(); } Foo has-a Bar: public class Foo { private Bar bar; } ","date":"2022-02-01","objectID":"/oop/:0:6","tags":["OOP","What is"],"title":"What is OOP","uri":"/oop/"},{"categories":["General Tech"],"content":"Association Relationship Has-A(Own Life Time | Exists Independently/Isolation) eg. Manager has a Swipe Card ","date":"2022-02-01","objectID":"/oop/:0:7","tags":["OOP","What is"],"title":"What is OOP","uri":"/oop/"},{"categories":["General Tech"],"content":"Aggregation Relationship Has-A(Ownership | Single owner of Child Object | Child Objects can exists Independently) eg. One Manager - Many Workers ","date":"2022-02-01","objectID":"/oop/:0:8","tags":["OOP","What is"],"title":"What is OOP","uri":"/oop/"},{"categories":["General Tech"],"content":"Abstraction Exposing only the relevant details of an entity A class can extend multiple abstract classes ","date":"2022-02-01","objectID":"/oop/:0:9","tags":["OOP","What is"],"title":"What is OOP","uri":"/oop/"},{"categories":["General Tech"],"content":"Encapsulation Binding data and operations together in an entity Information hiding: Access control modifier Implementation hiding: Through creation of interface for class ","date":"2022-02-01","objectID":"/oop/:0:10","tags":["OOP","What is"],"title":"What is OOP","uri":"/oop/"},{"categories":["General Tech"],"content":"Diffrence between abstraction and encapsulation Abstraction: The concept of allowing the user of your class to have access to only what they need. (Concept) Encapsulation: The physical code that prevents the user from accessing fields or methods you do not want them to (Actual Implementation) ","date":"2022-02-01","objectID":"/oop/:0:11","tags":["OOP","What is"],"title":"What is OOP","uri":"/oop/"},{"categories":["General Tech"],"content":"Inheritance Reusability of code Inheriting characteristics from parent class to child class without modifications ","date":"2022-02-01","objectID":"/oop/:0:12","tags":["OOP","What is"],"title":"What is OOP","uri":"/oop/"},{"categories":["General Tech"],"content":"Polymorphism: An object can have different forms Static polymorphism: method overloading Dynamic polymorphism: method overriding Example: abstract class Animal { String name; //cool functionality abstract String bark(); } // Inheritance class Dog extends Animal { String bark() { return \"Bow Bow\"; } } class Cat extends Animal { String bark() { return \"Meow Meow\"; } } public class InheritanceExamples { public static void main(String[] args) { Animal animal = new Cat(); System.out.println(animal.bark()); } } ","date":"2022-02-01","objectID":"/oop/:0:13","tags":["OOP","What is"],"title":"What is OOP","uri":"/oop/"},{"categories":["General Tech"],"content":"Method Overloading vs Overriding Overloading: Same name but different parameters Overriding: Same name and same parameters ","date":"2022-02-01","objectID":"/oop/:0:14","tags":["OOP","What is"],"title":"What is OOP","uri":"/oop/"},{"categories":["General Tech"],"content":"Abstract class Abstract class is a half-defined parent class. Needs to be extened and methods implemented Can’t be instantiated User is not told about the process but only the method about the class (single approach) public abstract class Customer { public abstract decimal Discount(); } public class richCustomer : Customer { public override decimal Discount(); } ","date":"2022-02-01","objectID":"/oop/:0:15","tags":["OOP","What is"],"title":"What is OOP","uri":"/oop/"},{"categories":["General Tech"],"content":"Interfaces A class with no implementation It contains only the declaration of methods, parameters and values interface Flyable { void fly(); } class Aeroplane implements Flyable { public void fly() { System.out.println(\"Aeroplane is flying\"); } } class Bird implements Flyable { public void fly() { System.out.println(\"Bird is flying\"); } } public class InterfaceExamples { public static void main(String[] args) { Flyable flyable = new Bird(); flyable.fly(); } } ","date":"2022-02-01","objectID":"/oop/:0:16","tags":["OOP","What is"],"title":"What is OOP","uri":"/oop/"},{"categories":["General Tech"],"content":"Interface vs Abstract class Fist interface created, then abstract class, then concrete classes ","date":"2022-02-01","objectID":"/oop/:0:17","tags":["OOP","What is"],"title":"What is OOP","uri":"/oop/"},{"categories":["General Tech"],"content":"Early binding vs Late binding ","date":"2022-02-01","objectID":"/oop/:0:18","tags":["OOP","What is"],"title":"What is OOP","uri":"/oop/"},{"categories":["General Tech"],"content":"How are data stored in your computer","date":"2022-01-30","objectID":"/how-data-are-stored/","tags":["How"],"title":"How Data Are Stored","uri":"/how-data-are-stored/"},{"categories":["General Tech"],"content":"How data are ACTUALLY sotred? In a nutshell: All data are stored as 1’s and 0’s, 1 and 0 are represented by high/low voltage of transistors. ","date":"2022-01-30","objectID":"/how-data-are-stored/:0:0","tags":["How"],"title":"How Data Are Stored","uri":"/how-data-are-stored/"},{"categories":["General Tech"],"content":"Brief Introduction Data are stored in bits, neither binary nor hex. They are both representations of data. Computer only identifies voltage levels. There will be some voltage for 1 (high) and some lower voltage for 0 (low). When ever high voltage is passed its 1 and other one is 0. We humans have a hard time looking at such and figuring out what’s going on. So we invent ways to make it easier on ourselves to visualize the workings of the computer. One way of doing this is to analogize those on and off signals as the numbers 1 and 0. This thinking of it in terms of binary numbers ","date":"2022-01-30","objectID":"/how-data-are-stored/:1:0","tags":["How"],"title":"How Data Are Stored","uri":"/how-data-are-stored/"},{"categories":["General Tech"],"content":"Dig into the Machine code Machine code, to the actual circuitry, isn’t numbers or values. Machine code is a bunch of voltage gates that are either open or closed, and depending on what they’re connected to, a certain light will flicker at a certain time etc. The “machine code” dictates the pathway and timing for specific electrical signals that will travel to reach their overall destination. So for 010101, 3 voltage gates are closed (The 0’s), 3 are open (The 1’s) 010101 would be easy instructions for a simple circuit, but how does a complex computer process all of the information? x-Bit-processors tell how many bits the processor can process at once. A bit is either 1 or 0, “On” or “Off”, “Open” or “Closed” so 32-bit processors process “10101010 10101010 10101010 10101010” - this many bits at once. A processor is an “integrated circuit”, which is like a compact circuit board, containing resistors/capacitors/transistors and some memory. I’m not sure if processors have resistors but I know you’ll usually find a ton of them located around the actual processor on the circuit board Anyways, a transistor is a switch so if it receives a 1, it sends current in one direction, or if it receives a 0, it’ll send current in a different direction… (or something like that) So I imagine that as machine code goes… the segment of code the processor receives changes the voltage channels in such a way that it sends a signal to another part of the computer (why do you think processors have so many pins?), probably another integrated circuit more specialized to a specific task. That integrated circuit then receives a chunk of code, let’s say 2 to 4 bits 01 or 1100 or something, which further defines where the final destination of the signal will end up, which might be straight back to the processor, or possibly to some output device. Machine code is a very efficient way of taking a circuit and connecting it to a lightbulb, and then taking that lightbulb out of the circuit and switching the circuit over to a different lightbulb Memory in a computer is highly necessary because otherwise to get your computer to do anything, you would need to type out everything (in machine code). Instead, all of the 1’s and 0’s are stored inside some storage device, either a spinning hard disk with a magnetic head pin that ‘reads’ 1’s or 0’s based on the charge of the disk, or a flash memory device that uses a series of transistors, where sending a voltage through elicits 1’s and 0’s (I’m not fully aware how flash memory works) Fortunately, someone took the time to think up a different base number system for programming (hex), and a way to compile those numbers (translate them) back into binary. And then all software programs have branched out from there. Each key on the keyboard creates a specific signal in binary that translates to a bunch of switches being turned on or off using certain voltages, so that a current could be run through the specific individual pixels on your screen that create “1” or “0” or “F”, or all the characters of this post. So I wonder, how does a program ‘program’, or ‘make’ the computer ‘do’ something… Rather, how does a compiler compile a program of a code different from binary? It’s hard to think about now because I’m extremely tired (so I won’t try) but also because EVERYTHING you do on a computer is because of some program. There are actively running programs (processes) in task manager. These keep your computer screen looking the way you’ve become accustomed, and also allow for the screen to be manipulated as if to say the pictures on the screen were real-life objects. (They aren’t, they’re just pictures, even your mouse cursor) (Ok I’m done. enough editing and elongating my thoughts, it’s time for bed) Also, what I don’t really get is how 0’s are ‘read’ by the computer. It seems that a ‘0’ must not be a ’lack of voltage’, rather, it must be some other type of signal Where perhaps something like 1 volt = 1, and 0.5 volts = 0. Some dist","date":"2022-01-30","objectID":"/how-data-are-stored/:2:0","tags":["How"],"title":"How Data Are Stored","uri":"/how-data-are-stored/"},{"categories":["General Tech"],"content":"Difference between modem \u0026 router \u0026 access point \u0026 switch","date":"2022-01-25","objectID":"/network-connection/","tags":["Network"],"title":"Modem vs Router vs Access Point vs Switch","uri":"/network-connection/"},{"categories":["General Tech"],"content":"So..What’s the Difference? A modem is your gateway to the internet—a cable, fiber optic, or telephone line comes through your neighborhood, to your house, and connects to your modem. The modem translates the digital 1s and 0s from your computer into analog information for the cable or telephone wire to carry out to the world, and translates incoming analog signals in the same way. This is called modulation and demodulation, respectively, and it’s where the “mo-dem” gets its name. A modem is a device that connects your home, usually through a coax cable connection, to your Internet service provider (ISP), like Xfinity. The modem takes signals from your ISP and translates them into signals your local devices can use, and vice versa. The connection between your house and the Internet is known as a wide area network (WAN). Each modem has an assigned public IP address that identifies it on the Internet. A router connects all your home’s devices to each other—through Ethernet cables or Wi-Fi—and then connects to the modem. It gives each device its own internal IP address, which it uses to route traffic between them. If your modem’s IP address is like the street address of a building, your router’s internal IP addresses are like apartment numbers. Your modem receives information from the internet, sends it to the router, and the router sends it to the computer that asked for it. (That way, your phone doesn’t receive the cat videos you asked for on your laptop.) The network created by your router is known as a local area network, or LAN, and it connects you to a larger wide area network, or WAN. In most home cases, your WAN is, for all intents and purposes, the internet. Your router: Assigns a local IP address to each device on the network Creates a firewall to prevent security breaches Manages the traffic on your network Handles any Parental Controls A wireless access point connects to your router, usually over Ethernet, and communicates with your Ethernet-less devices over wireless frequencies. Most home users have routers with wireless access points built in, but standalone access points are still common for businesses, since you can pair multiple access points together to extend your network over a large area. All routers come with built-in Ethernet ports, but depending on the size and class of router you buy, you may not have enough to plug in all your devices—especially in the age of smart home tech, which often require numerous, hard-wired base stations. If you run out of Ethernet ports on your router, a switch can add more Ethernet ports to your network. You just plug your extra devices into the switch, plug the switch into your router, and they’ll appear on your network. Note that you need a router in order to use a switch. A switch can’t assign IP addresses or create a network like your router can—it merely acts as a traffic cop for the signals coming through. ref https://www.pcmag.com/how-to/modem-router-and-access-point-whats-the-difference https://www.xfinity.com/hub/internet/modem-vs-router#:~:text=Modems%20bring%20the%20Internet%20to,can%20use%2C%20and%20vice%20versa. https://medium.com/@syakirharis25/modem-vs-gateway-vs-router-and-its-security-considerations-d853de8b4b31 ","date":"2022-01-25","objectID":"/network-connection/:1:0","tags":["Network"],"title":"Modem vs Router vs Access Point vs Switch","uri":"/network-connection/"},{"categories":["General Tech"],"content":"Collection of file","date":"2022-01-11","objectID":"/what-is-file/","tags":["What is"],"title":"What is File","uri":"/what-is-file/"},{"categories":["General Tech"],"content":"Executable files (.exe) An executable file is a type of computer file that runs a program when it is opened. This means it executes code or a series of instructions contained in the file. The two primary types of executable files are 1) compiled programs and 2) scripts. Executable files are not necessarily binary, for example a Python script in text form can be made executable on Unix systems by writing a shebang line #!/usr/bin/python3 and setting the file’s executable flag. ","date":"2022-01-11","objectID":"/what-is-file/:1:0","tags":["What is"],"title":"What is File","uri":"/what-is-file/"},{"categories":["General Tech"],"content":"Binary files A binary file is everything that is not plain text, which means it contains data encoded in any different way than text encoding. Such as: executables, database, app data, mp3, jpg Microsoft Word doc is text, it is encoded (written on disk) as binary. You need a specific program to open it, to make sense of it (For a text editor the contents are a jumbled mess). Binary files are not necessarily executable, for example a library compiled to .dll or .so form is a binary but not an executable. A Java program compiled to .class or .jar form is not an executable file, but might be run using the command java -jar program.jar rather than the command ./program.jar. ref: https://stackoverflow.com/questions/59826292/where-is-the-difference-between-binaries-and-executables-in-the-context-of-a https://unix.stackexchange.com/questions/103027/what-is-the-difference-between-binary-file-and-exe-file/103028 ","date":"2022-01-11","objectID":"/what-is-file/:2:0","tags":["What is"],"title":"What is File","uri":"/what-is-file/"},{"categories":["General Tech"],"content":"Collection of code","date":"2021-12-20","objectID":"/what-is-code/","tags":["What is"],"title":"What is Code","uri":"/what-is-code/"},{"categories":["General Tech"],"content":"About code Sometimes I got confused by some concepts, such as machine code and object code. Here’s a collection of “code” definitions ","date":"2021-12-20","objectID":"/what-is-code/:0:0","tags":["What is"],"title":"What is Code","uri":"/what-is-code/"},{"categories":["General Tech"],"content":"Source code: (.c file) Any collection of code, with or without comments, written using a human-readable programming language, usually as plain text. ","date":"2021-12-20","objectID":"/what-is-code/:1:0","tags":["What is"],"title":"What is Code","uri":"/what-is-code/"},{"categories":["General Tech"],"content":"Assembly code (.s file) is plain-text and (somewhat) human read-able source code that mostly has a direct 1:1 analog with machine instructions. This is accomplished using mnemonics for the actual instructions, registers, or other resources. Examples include JMP and MULT for the CPU’s jump and multiplication instructions. Unlike machine code, the CPU does not understand assembly code. You convert assembly code to machine code with the use of an assembler or a compiler, though we usually think of compilers in association with high-level programming language that are abstracted further from the CPU instructions. ","date":"2021-12-20","objectID":"/what-is-code/:2:0","tags":["What is"],"title":"What is Code","uri":"/what-is-code/"},{"categories":["General Tech"],"content":"Machine code (1000101) Machine language is made up of instructions and data that can be executed directly by the CPU. They are all binary code. (Basically 0 and 1) Machine language is normally displayed in hexadecimal form so that it is a little bit easier to read. If you open a machine code file in a text editor you would see garbage, including unprintable characters ","date":"2021-12-20","objectID":"/what-is-code/:3:0","tags":["What is"],"title":"What is Code","uri":"/what-is-code/"},{"categories":["General Tech"],"content":"Object code (.o file) is a portion of machine code not yet linked into a complete program. It’s the machine code for one particular library or module that will make up the completed product. It may also contain placeholders or offsets not found in the machine code of a completed program. The linker will use these placeholders and offsets to connect everything together. ref: https://stackoverflow.com/questions/466790/assembly-code-vs-machine-code-vs-object-code https://cloud.tencent.com/developer/ask/196917 ","date":"2021-12-20","objectID":"/what-is-code/:4:0","tags":["What is"],"title":"What is Code","uri":"/what-is-code/"},{"categories":["General Tech"],"content":"How to compile a program","date":"2021-12-11","objectID":"/how-to-run-program/","tags":["Programming","How"],"title":"How to run a program from scratch","uri":"/how-to-run-program/"},{"categories":["General Tech"],"content":"This might be a stupid question for a programmer who has years of programming experience. But when I first started programming, I have no clue how to run a program. I simply followed my professor’s instruction: downloaded codeblocks/visual studio, typed in some code, and I could run my program magically! Back in the days, I did’t understand what an IDE means, how program compiles inside the IDE, why the code is layed out in certain ways, etc. But I have figured out these foundemental questions through years. ","date":"2021-12-11","objectID":"/how-to-run-program/:0:0","tags":["Programming","How"],"title":"How to run a program from scratch","uri":"/how-to-run-program/"},{"categories":["General Tech"],"content":"Requirements to run a program Hardware： It must have the correct class of CPU to execute the instructions in the code. It must have sufficient hardware resources to support the code: memory, CPU speed, perhaps graphics or sound subsystems, or other peripheral devices Software： It must have an OS environment that supports the system calls built into the software by the programmer/designer. This might include configuration items, such as pre-existing directory structures, filesystem permissions, environment variable settings, and numerous other settings. Usually, an installation procedure will look after this part, if there is one. A program needs to start operating system compatibility, and additionally some other support software (for example, programs in Java will need the virtual machine of java). If the program uses any device, you must have the appropriate driver for the operating system, the device and the same program. It must have installed support libraries, often from hardware vendors, or other software products. This might even include the presence of some standalone software products, such as a database server. Often, these are version dependent; specific versions of each must be present. ","date":"2021-12-11","objectID":"/how-to-run-program/:1:0","tags":["Programming","How"],"title":"How to run a program from scratch","uri":"/how-to-run-program/"},{"categories":["General Tech"],"content":"What do we need to do exactly? Three main ways to run a program: Set up IDE (VS, Xcode), and setup environments to run program inside IDE Install compiler on your device (brew install gcc) Use cloud computing (Google cloud platform, School linux server…) ","date":"2021-12-11","objectID":"/how-to-run-program/:2:0","tags":["Programming","How"],"title":"How to run a program from scratch","uri":"/how-to-run-program/"},{"categories":["General Tech"],"content":"How Linker \u0026 Loader works","date":"2021-11-12","objectID":"/what-is-linker-loader/","tags":["What is"],"title":"What is Linker \u0026 Loader","uri":"/what-is-linker-loader/"},{"categories":["General Tech"],"content":"Linker \u0026 Loader Linker: A linker is special program that combines the object files, generated by compiler/assembler, and other pieces of codes to originate an executable file have. exe extension. In the object file, linker searches and append all libraries needed for execution of file. It regulates memory space that code from each module will hold. It also merges two or more separate object programs and establishes link among them. Generally, linkers are of two types : 1. Linkage Editor 2. Dynamic Linker Loader: The loader is special program that takes input of object code from linker, loads it to main memory, and prepares this code for execution by computer. Loader allocates memory space to program. Even it settles down symbolic reference between objects. It in charge of loading programs and libraries in operating system. The embedded computer systems don’t have loaders. In them, code is executed through ROM. Generally, loader has three types of approach : 1. Absolute loading 2. Relocatable loading 3. Dynamic run-time loading Difference Between Linker and Loader : ","date":"2021-11-12","objectID":"/what-is-linker-loader/:0:0","tags":["What is"],"title":"What is Linker \u0026 Loader","uri":"/what-is-linker-loader/"},{"categories":["General Tech"],"content":"How compiler works","date":"2021-10-10","objectID":"/what-is-compiler/","tags":["What is"],"title":"What is Compiler","uri":"/what-is-compiler/"},{"categories":["General Tech"],"content":"Dr. Hamer Here’s a cartoon of the professor who taught me compiler: Dr. Hamer He’s a character and a great professor with humor and fantastic teaching skills. He has influnced me a lot Compiler: In computing, a compiler is a computer program that translates computer code written in one programming language (the source language) into another language (the target language) Origin: The firist compiler was coded in the late 1950’s for Fortran A compiler will typically report errors Compiler phases Lexical Analysis: The source program is broken up into individual tokens. Syntax Analysis: Group the tokens into phases of the language. Semantic Analysis: Check the meaning of our sentences. Intermediate Code Generator: Create a machine independent representation of the source. Code Optimization: Attempt to remove redundant and/or unneeded instructions. Code Generation: Translate the intermediate code into a machine dependent target language. Compiler performs 2 tasks: Analysis (is this code written correctly?) - machine independent Synthesis (convert to target language) - machine dependent Front end: lexical analysis, syntax analysis, semantic analysis - Analysis Both end: intermediate code reprensetation - Synthesis Back end: code optimization, code generation - Synthesis references：https://www.tutorialspoint.com/compiler_design/compiler_design_phases_of_compiler.htm ","date":"2021-10-10","objectID":"/what-is-compiler/:0:0","tags":["What is"],"title":"What is Compiler","uri":"/what-is-compiler/"},{"categories":["General Tech"],"content":"How assembler works","date":"2021-09-11","objectID":"/what-is-assembler/","tags":["What is"],"title":"What is Assembler","uri":"/what-is-assembler/"},{"categories":["General Tech"],"content":"Assembler An assembler translates assembly language into machine code Assembling Process ","date":"2021-09-11","objectID":"/what-is-assembler/:0:0","tags":["What is"],"title":"What is Assembler","uri":"/what-is-assembler/"},{"categories":["General Tech"],"content":"A SIC/XE source program looks like this ","date":"2021-09-11","objectID":"/what-is-assembler/:1:0","tags":["What is"],"title":"What is Assembler","uri":"/what-is-assembler/"},{"categories":["General Tech"],"content":"A Intermediate file looks like this ","date":"2021-09-11","objectID":"/what-is-assembler/:2:0","tags":["What is"],"title":"What is Assembler","uri":"/what-is-assembler/"},{"categories":["General Tech"],"content":"An object file looks like this Pass-1: Define symbols and literals and remember them in symbol table and literal table respectively. Keep track of location counter Process pseudo-operations Pass-2: Generate object code by converting symbolic op-code into respective numeric op-code Generate data for literals and look for values of symbols ","date":"2021-09-11","objectID":"/what-is-assembler/:3:0","tags":["What is"],"title":"What is Assembler","uri":"/what-is-assembler/"},{"categories":["General Tech"],"content":"How program compiles","date":"2021-09-10","objectID":"/what-happens-when-run-program/","tags":["What happens when"],"title":"What happens when you run your program","uri":"/what-happens-when-run-program/"},{"categories":["General Tech"],"content":"When you click “run” or “compile” in your IDE, you will get a result from the program. But what actually happens inside the computer? Compliation Porcess =====\u003e COMPILATION PROCESS \u003c====== | |----\u003e Input is Source file(.c) | V +=================+ | | | C Preprocessor | | | +=================+ | | ---\u003e Pure C file ( comd:cc -E \u003cfile.name\u003e ) | V +=================+ | | | Lexical Analyzer| | | +-----------------+ | | | Syntax Analyzer | | | +-----------------+ | | | Semantic Analyze| | | +-----------------+ -----\u003e Compiler | | | Pre Optimization| | | +-----------------+ | | | Code generation | | | +-----------------+ | | | Post Optimize | | | +=================+ | |---\u003e Assembly code (comd: cc -S \u003cfile.name\u003e ) | V +=================+ | | | Assembler | | | +=================+ | |---\u003e Object file (.obj) (comd: cc -c \u003cfile.name\u003e) | V +=================+ | Linker | | and | | loader | +=================+ | |---\u003e Executable (.Exe/a.out) (com:cc \u003cfile.name\u003e ) | V Executable file(a.out) A compiler reads, analyses and translates code into either an object file or a list of error messages. A assembler converts assemlby code to object files. A linker combines one or more object files and possible some library code into either some executable, some library or a list of error messages. A loader reads the executable code into memory, does some address translation and tries to run the program resulting in a running program or an error message (or both). ref: https://www.youtube.com/watch?v=QXjU9qTsYCc ","date":"2021-09-10","objectID":"/what-happens-when-run-program/:0:0","tags":["What happens when"],"title":"What happens when you run your program","uri":"/what-happens-when-run-program/"},{"categories":["Programming Language"],"content":"Questions regarding C# \u0026 ASP.NET","date":"2021-08-25","objectID":"/c-sharp-cheatsheet/","tags":["C Sharp","Programming","ASP.NET"],"title":"C# CheatSheet","uri":"/c-sharp-cheatsheet/"},{"categories":["Programming Language"],"content":"Difference between C# and .Net C# is a programming language .Net is a framework that can run C# application It is a collections of library It has a CLR ","date":"2021-08-25","objectID":"/c-sharp-cheatsheet/:0:1","tags":["C Sharp","Programming","ASP.NET"],"title":"C# CheatSheet","uri":"/c-sharp-cheatsheet/"},{"categories":["Programming Language"],"content":".Net framwork4.X vs .Net Core3.X vs .Net 5.0 .Net framework .Net Core Platform Windows Cross-platform Performance Slow Better CLI IDE based Full CLI command supported (Run CMD) Packaging One big framework Delivered via modularly using Nuget .Net5.0 is a unified platform ","date":"2021-08-25","objectID":"/c-sharp-cheatsheet/:0:2","tags":["C Sharp","Programming","ASP.NET"],"title":"C# CheatSheet","uri":"/c-sharp-cheatsheet/"},{"categories":["Programming Language"],"content":"What is IL code \u0026\u0026 What is the use of JIT? IL: Intermediate language code (partial compiled code) JIT: Just in time compiler Source Code --\u003e IL --(JIT)--\u003e Machine code Benefit: For different runtime and dev environment, JIT compiles the best optimized code for that environment ","date":"2021-08-25","objectID":"/c-sharp-cheatsheet/:0:3","tags":["C Sharp","Programming","ASP.NET"],"title":"C# CheatSheet","uri":"/c-sharp-cheatsheet/"},{"categories":["Programming Language"],"content":"What is CLR CLR: common language runtime CLR invokes JIT to convert IL code to machine language Cleans unused objects by using garbage collector ","date":"2021-08-25","objectID":"/c-sharp-cheatsheet/:0:4","tags":["C Sharp","Programming","ASP.NET"],"title":"C# CheatSheet","uri":"/c-sharp-cheatsheet/"},{"categories":["Programming Language"],"content":"Garbage collector Background process which cleans Unused Managed resources Cannot clean unmanaged recources ","date":"2021-08-25","objectID":"/c-sharp-cheatsheet/:0:5","tags":["C Sharp","Programming","ASP.NET"],"title":"C# CheatSheet","uri":"/c-sharp-cheatsheet/"},{"categories":["Programming Language"],"content":"CTS Common types system ensures that data types defined in two different languages gets compiled to a common data type ","date":"2021-08-25","objectID":"/c-sharp-cheatsheet/:0:6","tags":["C Sharp","Programming","ASP.NET"],"title":"C# CheatSheet","uri":"/c-sharp-cheatsheet/"},{"categories":["Programming Language"],"content":"CLS Common language specifications A set of guidelines that make any language following .NET specifications (Case sensitive) ","date":"2021-08-25","objectID":"/c-sharp-cheatsheet/:0:7","tags":["C Sharp","Programming","ASP.NET"],"title":"C# CheatSheet","uri":"/c-sharp-cheatsheet/"},{"categories":["Programming Language"],"content":"Stack vs Heap Stack stores primitive data types (int ,boolean, double) Heap stores objects Stack handles function calls ","date":"2021-08-25","objectID":"/c-sharp-cheatsheet/:0:8","tags":["C Sharp","Programming","ASP.NET"],"title":"C# CheatSheet","uri":"/c-sharp-cheatsheet/"},{"categories":["Programming Language"],"content":"Value type vs Reference type Value types (contains actual data like int a = 0) are stores on stack Reference types (contains pointers and the pointers point to the actual data)are stored on heap ","date":"2021-08-25","objectID":"/c-sharp-cheatsheet/:0:9","tags":["C Sharp","Programming","ASP.NET"],"title":"C# CheatSheet","uri":"/c-sharp-cheatsheet/"},{"categories":["Programming Language"],"content":"Casting Explicit casting:(lower to higher type) int y = (int)d; Implicit casting:(lower to higher type) int i = 1; double d = i; ","date":"2021-08-25","objectID":"/c-sharp-cheatsheet/:0:10","tags":["C Sharp","Programming","ASP.NET"],"title":"C# CheatSheet","uri":"/c-sharp-cheatsheet/"},{"categories":["Programming Language"],"content":"Generic collections Strongly typed and flexible List geneint = new List(); geneit.Add(1); ","date":"2021-08-25","objectID":"/c-sharp-cheatsheet/:0:11","tags":["C Sharp","Programming","ASP.NET"],"title":"C# CheatSheet","uri":"/c-sharp-cheatsheet/"},{"categories":["Programming Language"],"content":"Advantages of using C# Simple \u0026 fast High scalability No buffering Cross plaforms ","date":"2021-08-25","objectID":"/c-sharp-cheatsheet/:0:12","tags":["C Sharp","Programming","ASP.NET"],"title":"C# CheatSheet","uri":"/c-sharp-cheatsheet/"},{"categories":["Programming Language"],"content":"Code compilation in C# Compliation of Source code Clubbing newly created code (Test code and funtion code) Executing assembly CLR (Common language runtime) ","date":"2021-08-25","objectID":"/c-sharp-cheatsheet/:0:13","tags":["C Sharp","Programming","ASP.NET"],"title":"C# CheatSheet","uri":"/c-sharp-cheatsheet/"},{"categories":["Programming Language"],"content":"Access modifers in C Public: it can be accessed by every part of the code Private: it only can be accessed within the class Protected: it only can be accessed within the class and the inheriting class (parent and child class) Internal: it can be accessed in the class at the current assembly position ","date":"2021-08-25","objectID":"/c-sharp-cheatsheet/:0:14","tags":["C Sharp","Programming","ASP.NET"],"title":"C# CheatSheet","uri":"/c-sharp-cheatsheet/"},{"categories":["Programming Language"],"content":"Passing parameters to a method Value parameters (not affect original value) Reference parameters (affect original value) Output parameters (returns more than one value) ","date":"2021-08-25","objectID":"/c-sharp-cheatsheet/:0:15","tags":["C Sharp","Programming","ASP.NET"],"title":"C# CheatSheet","uri":"/c-sharp-cheatsheet/"},{"categories":["Programming Language"],"content":"Difference between finally and finalize block Final block is called after try catch blocks (not dependent on the exception handling) Finalize method is called just before garbage collection (cleanup operation for unmanaged code) ","date":"2021-08-25","objectID":"/c-sharp-cheatsheet/:0:16","tags":["C Sharp","Programming","ASP.NET"],"title":"C# CheatSheet","uri":"/c-sharp-cheatsheet/"},{"categories":["Programming Language"],"content":"Managed code vs Unmanaged code Managed code: Executed by CLR ALl the application code is dependent on .Net platform Unmanaged code: Executed by runtime application of some other structure The runtime application deals with memory, security and other execution activities ","date":"2021-08-25","objectID":"/c-sharp-cheatsheet/:0:17","tags":["C Sharp","Programming","ASP.NET"],"title":"C# CheatSheet","uri":"/c-sharp-cheatsheet/"},{"categories":["Programming Language"],"content":"Define Sealed class Created when you want to restrict the class being inherited ","date":"2021-08-25","objectID":"/c-sharp-cheatsheet/:0:18","tags":["C Sharp","Programming","ASP.NET"],"title":"C# CheatSheet","uri":"/c-sharp-cheatsheet/"},{"categories":["Programming Language"],"content":"Define a partial class Make use of suplit function Splits the definition of the class into multiple classes in same file or multiple files One can create a class definition in multiple files but it is compiled as one class at run-time User can create object of partial class and access all the methods from every source file ","date":"2021-08-25","objectID":"/c-sharp-cheatsheet/:0:19","tags":["C Sharp","Programming","ASP.NET"],"title":"C# CheatSheet","uri":"/c-sharp-cheatsheet/"},{"categories":["Programming Language"],"content":"StreamReader/StreamWrite class StreamReader sr = new StreamReader(\"C: Readme.txt\") StreamWriter sr = new StreamWriter(\"C: Readme.txt\") ","date":"2021-08-25","objectID":"/c-sharp-cheatsheet/:0:20","tags":["C Sharp","Programming","ASP.NET"],"title":"C# CheatSheet","uri":"/c-sharp-cheatsheet/"},{"categories":["Programming Language"],"content":"Class vs Struct ","date":"2021-08-25","objectID":"/c-sharp-cheatsheet/:0:21","tags":["C Sharp","Programming","ASP.NET"],"title":"C# CheatSheet","uri":"/c-sharp-cheatsheet/"},{"categories":["Programming Language"],"content":"Virtual vs Abstract method ","date":"2021-08-25","objectID":"/c-sharp-cheatsheet/:0:22","tags":["C Sharp","Programming","ASP.NET"],"title":"C# CheatSheet","uri":"/c-sharp-cheatsheet/"},{"categories":["Programming Language"],"content":"Namespaces Used for organizing large code projects ","date":"2021-08-25","objectID":"/c-sharp-cheatsheet/:0:23","tags":["C Sharp","Programming","ASP.NET"],"title":"C# CheatSheet","uri":"/c-sharp-cheatsheet/"},{"categories":["Programming Language"],"content":"Boxing and Unboxing Converting a value type to reference type is called boxing int value = 10 // Boxing: Object boxedvalue = value1; // Unboxing: int Unboxing = int(boxedvalue) ","date":"2021-08-25","objectID":"/c-sharp-cheatsheet/:0:24","tags":["C Sharp","Programming","ASP.NET"],"title":"C# CheatSheet","uri":"/c-sharp-cheatsheet/"},{"categories":["Programming Language"],"content":"Jagged Array Array of arrays Int[][] Jagarr = new[5][5]; ","date":"2021-08-25","objectID":"/c-sharp-cheatsheet/:0:25","tags":["C Sharp","Programming","ASP.NET"],"title":"C# CheatSheet","uri":"/c-sharp-cheatsheet/"},{"categories":["Programming Language"],"content":"Array vs ArrayList int [] arr = {1,2}; ArrayList list = new ArrayList(); ","date":"2021-08-25","objectID":"/c-sharp-cheatsheet/:0:26","tags":["C Sharp","Programming","ASP.NET"],"title":"C# CheatSheet","uri":"/c-sharp-cheatsheet/"},{"categories":["Programming Language"],"content":"Collections A collection works like a container for instances of other classes, every class implements collection interface ","date":"2021-08-25","objectID":"/c-sharp-cheatsheet/:0:27","tags":["C Sharp","Programming","ASP.NET"],"title":"C# CheatSheet","uri":"/c-sharp-cheatsheet/"},{"categories":["Programming Language"],"content":"Serialization Process that involves converting some code into its binary format Binay Serialization XML Serialization SOAP ","date":"2021-08-25","objectID":"/c-sharp-cheatsheet/:0:28","tags":["C Sharp","Programming","ASP.NET"],"title":"C# CheatSheet","uri":"/c-sharp-cheatsheet/"},{"categories":["Programming Language"],"content":"Parsing String text = \"200\" int.num = int.Parse(text) ","date":"2021-08-25","objectID":"/c-sharp-cheatsheet/:0:29","tags":["C Sharp","Programming","ASP.NET"],"title":"C# CheatSheet","uri":"/c-sharp-cheatsheet/"},{"categories":["Programming Language"],"content":"Delegate A delegate is a variable that holds the reference to a method Useful to communicate between threads It’s a function pointer of the reference type public Delegate int myDel(int number) public int SubstractNum(int a) // Substract a by 10, return an int // In public void start() myDel DelegateExample = SubstractNum; // Holds the reference to a method ","date":"2021-08-25","objectID":"/c-sharp-cheatsheet/:0:30","tags":["C Sharp","Programming","ASP.NET"],"title":"C# CheatSheet","uri":"/c-sharp-cheatsheet/"},{"categories":["Programming Language"],"content":"System.String vs System.Text.StringBuilder ","date":"2021-08-25","objectID":"/c-sharp-cheatsheet/:0:31","tags":["C Sharp","Programming","ASP.NET"],"title":"C# CheatSheet","uri":"/c-sharp-cheatsheet/"},{"categories":["Programming Language"],"content":"System.Array.CopyTo() vs System.Array.Clone() Clone(): A new array obj is created with all elements CopyTo(): All the elements get copied into another existing array ","date":"2021-08-25","objectID":"/c-sharp-cheatsheet/:0:32","tags":["C Sharp","Programming","ASP.NET"],"title":"C# CheatSheet","uri":"/c-sharp-cheatsheet/"},{"categories":["Programming Language"],"content":"Try…Catch… try { int y = 0; int z = 1 / y; } catch(Exception ex) // parameter type is system.Exception { // do something } ","date":"2021-08-25","objectID":"/c-sharp-cheatsheet/:0:33","tags":["C Sharp","Programming","ASP.NET"],"title":"C# CheatSheet","uri":"/c-sharp-cheatsheet/"},{"categories":["Programming Language"],"content":"Generics in C#.Net Used to make reusable code classes that decrease code redundancy Increase type safety, performance and optimization Generics create collection ","date":"2021-08-25","objectID":"/c-sharp-cheatsheet/:0:34","tags":["C Sharp","Programming","ASP.NET"],"title":"C# CheatSheet","uri":"/c-sharp-cheatsheet/"},{"categories":["Programming Language"],"content":"Finalize vs dispose() Dispose releases unmanaged resources Finalize doesn’t assure garbage collection (it releases unmanaged resources too) ","date":"2021-08-25","objectID":"/c-sharp-cheatsheet/:0:35","tags":["C Sharp","Programming","ASP.NET"],"title":"C# CheatSheet","uri":"/c-sharp-cheatsheet/"},{"categories":["Programming Language"],"content":"Thread Thread: is a set of instructions that when executed enables the program to perform concurrent processing. Thread terminates immediately after execution Multithreading: Execute more than one process/task at a time Parallel execution: Thread t = new Thread(Method1); t.Start(); Thread t1 = new Thread(Method2); t1.Start(); ","date":"2021-08-25","objectID":"/c-sharp-cheatsheet/:0:36","tags":["C Sharp","Programming","ASP.NET"],"title":"C# CheatSheet","uri":"/c-sharp-cheatsheet/"},{"categories":["Programming Language"],"content":"Task TPL: Task parallel Library Parallel processing Pooling threads Perform actions with a task ","date":"2021-08-25","objectID":"/c-sharp-cheatsheet/:0:37","tags":["C Sharp","Programming","ASP.NET"],"title":"C# CheatSheet","uri":"/c-sharp-cheatsheet/"},{"categories":["Programming Language"],"content":"Events Encapsulated delegate public Delegate void TestEvent(); public TestEvent TestEvent1 ","date":"2021-08-25","objectID":"/c-sharp-cheatsheet/:0:38","tags":["C Sharp","Programming","ASP.NET"],"title":"C# CheatSheet","uri":"/c-sharp-cheatsheet/"},{"categories":["Programming Language"],"content":"Synchronous and Asynchronous Operations S: only a single thread will access in a given time S call waits for completion of method and then continuous the program flow A: the method call immediately returns allowing the program to perform other operations ","date":"2021-08-25","objectID":"/c-sharp-cheatsheet/:0:39","tags":["C Sharp","Programming","ASP.NET"],"title":"C# CheatSheet","uri":"/c-sharp-cheatsheet/"},{"categories":["Programming Language"],"content":"Async and Await (For creating Asynchronous methods) /// ","date":"2021-08-25","objectID":"/c-sharp-cheatsheet/:0:40","tags":["C Sharp","Programming","ASP.NET"],"title":"C# CheatSheet","uri":"/c-sharp-cheatsheet/"},{"categories":["Programming Language"],"content":"Deadlock /// ","date":"2021-08-25","objectID":"/c-sharp-cheatsheet/:0:41","tags":["C Sharp","Programming","ASP.NET"],"title":"C# CheatSheet","uri":"/c-sharp-cheatsheet/"},{"categories":["Programming Language"],"content":"Common used Python code","date":"2021-07-22","objectID":"/python-cheatsheet/","tags":["Python","Programming"],"title":"Python CheatSheet","uri":"/python-cheatsheet/"},{"categories":["Programming Language"],"content":"Where the program starts if __name__ == '__main__': # statements ","date":"2021-07-22","objectID":"/python-cheatsheet/:1:0","tags":["Python","Programming"],"title":"Python CheatSheet","uri":"/python-cheatsheet/"},{"categories":["Programming Language"],"content":"Self Use self to pass values between def’s self.arr = nums ","date":"2021-07-22","objectID":"/python-cheatsheet/:2:0","tags":["Python","Programming"],"title":"Python CheatSheet","uri":"/python-cheatsheet/"},{"categories":["Programming Language"],"content":"Array types: List: letters = ['a', 'b', 'c', 'd', 'e', 'f', 'g'] len(letters) # Returns length of array ## Common use list = [] list.append((a,b)) list.sort() # nlogn Tuple: is immutable! dimensions = (200, 50) Dict: Basically HashMap student1 = {'gender': 'male', 'age': 18} d = {} # d = dict() d[0] = 1 # or d = {0:1} d = defaultdict(int) # init with 0 # Update dict if s in d: d[s] += 1 else: d[s] = 1 ## Java-like version count += d.get(s-k,0) d[s] = d.get(s,0) + 1 Set: new_set = {value1, value2, value2, ...} new_set2 = set(value) ","date":"2021-07-22","objectID":"/python-cheatsheet/:3:0","tags":["Python","Programming"],"title":"Python CheatSheet","uri":"/python-cheatsheet/"},{"categories":["Programming Language"],"content":"Range function # range(start, stop) for i in range(1, 10): print(i) # range(stop) start from 0 for i in range(10): print(i) # range(start, stop, step) for i in range(0, 13, 5): print(i) # travse backwards: https://www.tutorialspoint.com/backward-iteration-in-python for i in range(len(nums)-1, -1, -1): ","date":"2021-07-22","objectID":"/python-cheatsheet/:4:0","tags":["Python","Programming"],"title":"Python CheatSheet","uri":"/python-cheatsheet/"},{"categories":["Programming Language"],"content":"If else if condition_1: statement_block_1 # Execute if condition_1 is True elif condition_2: statement_block_2 # Execute if condition_1 is False \u0026 condition_2 is True elif condition_3: statement_block 3 # Execute if condition_3 is True and 1 \u0026 2 are False else: statement_block_3 # Execute if previous conditions are all Falser ","date":"2021-07-22","objectID":"/python-cheatsheet/:5:0","tags":["Python","Programming"],"title":"Python CheatSheet","uri":"/python-cheatsheet/"},{"categories":["Programming Language"],"content":"Heap Min heap h =[] heapq.heappush(h,i[1]) heapq.heapreplace(h,i[1]) ","date":"2021-07-22","objectID":"/python-cheatsheet/:6:0","tags":["Python","Programming"],"title":"Python CheatSheet","uri":"/python-cheatsheet/"},{"categories":["Programming Language"],"content":"Loop # While loop num = 0 while num \u003c 10: print(num) # For loop list = [1, 2, 3, 4, 5, 6] for i in list: print(i) for a, b, c in list: ## [[a,b,c],[1,2,3]] for index, num in enumerate(nums) for i in range(len(nums)): ","date":"2021-07-22","objectID":"/python-cheatsheet/:7:0","tags":["Python","Programming"],"title":"Python CheatSheet","uri":"/python-cheatsheet/"},{"categories":["Programming Language"],"content":"Functions def function_name(parameters): expressions ","date":"2021-07-22","objectID":"/python-cheatsheet/:8:0","tags":["Python","Programming"],"title":"Python CheatSheet","uri":"/python-cheatsheet/"},{"categories":["Programming Language"],"content":"Catch Exceptions try: print(x) except: print(\"Something went wrong\") finally: # finally will always be executed print(\"The 'try except' is finished\") ","date":"2021-07-22","objectID":"/python-cheatsheet/:9:0","tags":["Python","Programming"],"title":"Python CheatSheet","uri":"/python-cheatsheet/"},{"categories":["Programming Language"],"content":"Math max(num1, num2) sum(nums) i**2 # i^2 ","date":"2021-07-22","objectID":"/python-cheatsheet/:10:0","tags":["Python","Programming"],"title":"Python CheatSheet","uri":"/python-cheatsheet/"},{"categories":["Programming Language"],"content":"Init sum, num = 0,0 newlist = [0] newlist = nums + [0] newlist = [1] + [0] * k # [0:1, 0:0, 0:0] newlist = list(rage(8)) # [0,1,..7] ","date":"2021-07-22","objectID":"/python-cheatsheet/:11:0","tags":["Python","Programming"],"title":"Python CheatSheet","uri":"/python-cheatsheet/"},{"categories":["Programming Language"],"content":"Slice notation ","date":"2021-07-22","objectID":"/python-cheatsheet/:12:0","tags":["Python","Programming"],"title":"Python CheatSheet","uri":"/python-cheatsheet/"},{"categories":["Programming Language"],"content":"https://stackoverflow.com/questions/509211/understanding-slicing ","date":"2021-07-22","objectID":"/python-cheatsheet/:13:0","tags":["Python","Programming"],"title":"Python CheatSheet","uri":"/python-cheatsheet/"},{"categories":["Programming Language"],"content":"Sort Lambda intervals = sorted(intervals, key = lambda x : x[0]) list.sort() # nlogn To be reviewd ","date":"2021-07-22","objectID":"/python-cheatsheet/:14:0","tags":["Python","Programming"],"title":"Python CheatSheet","uri":"/python-cheatsheet/"},{"categories":["Programming Language"],"content":"Class Encapsulation/Inheritance/Polymorphism ","date":"2021-07-22","objectID":"/python-cheatsheet/:15:0","tags":["Python","Programming"],"title":"Python CheatSheet","uri":"/python-cheatsheet/"},{"categories":["Programming Language"],"content":"Unit Testing Unit Testing ","date":"2021-07-22","objectID":"/python-cheatsheet/:16:0","tags":["Python","Programming"],"title":"Python CheatSheet","uri":"/python-cheatsheet/"},{"categories":["Programming Language"],"content":"Common used Ruby code","date":"2021-07-15","objectID":"/ruby-cheatsheet/","tags":["Ruby","Programming"],"title":"Ruby CheatSheet","uri":"/ruby-cheatsheet/"},{"categories":["Programming Language"],"content":"Everything in ruby is an object ","date":"2021-07-15","objectID":"/ruby-cheatsheet/:0:0","tags":["Ruby","Programming"],"title":"Ruby CheatSheet","uri":"/ruby-cheatsheet/"},{"categories":["Programming Language"],"content":"Write/Read file write_handler = File.new(\"newfile.out\", \"w\") write_handle.puts(\"sometext\").to_s write_handle.close data_from_file = File.read(\"newfile.out\") puts \"Data from file: \" + data_from_file ","date":"2021-07-15","objectID":"/ruby-cheatsheet/:0:1","tags":["Ruby","Programming"],"title":"Ruby CheatSheet","uri":"/ruby-cheatsheet/"},{"categories":["Programming Language"],"content":"Comments =begin my comments =end # Comments ","date":"2021-07-15","objectID":"/ruby-cheatsheet/:0:2","tags":["Ruby","Programming"],"title":"Ruby CheatSheet","uri":"/ruby-cheatsheet/"},{"categories":["Programming Language"],"content":"if-else condition if (xxx) puts... elsif (xxx) puts... else puts... end ","date":"2021-07-15","objectID":"/ruby-cheatsheet/:0:3","tags":["Ruby","Programming"],"title":"Ruby CheatSheet","uri":"/ruby-cheatsheet/"},{"categories":["Programming Language"],"content":"Comparision puts \"5 \u003c=\u003e 10 = \" + (5 \u003c=\u003e 10).to_s ","date":"2021-07-15","objectID":"/ruby-cheatsheet/:0:4","tags":["Ruby","Programming"],"title":"Ruby CheatSheet","uri":"/ruby-cheatsheet/"},{"categories":["Programming Language"],"content":"Loop loop do x += 1 next unless (x%2) == 0 puts x break if x \u003e= 10 end while y \u003c= 10 # until y \u003c= 10 xxx end for num in nums puts \"# {num} , \" # print - no new line end ","date":"2021-07-15","objectID":"/ruby-cheatsheet/:0:5","tags":["Ruby","Programming"],"title":"Ruby CheatSheet","uri":"/ruby-cheatsheet/"},{"categories":["Programming Language"],"content":"Array arr = [\"a\", \"b\", \"c\"] arr = Array.new arr = Array.new(5, \"a\") arr.each do |str| puts \"Get a string #{str}\" end (0..5).each do |i| puts \"#{i}\" end ","date":"2021-07-15","objectID":"/ruby-cheatsheet/:0:6","tags":["Ruby","Programming"],"title":"Ruby CheatSheet","uri":"/ruby-cheatsheet/"},{"categories":["Programming Language"],"content":"Hash number_hash = {\"PI\" =\u003e 3.14, \"e\" =\u003e 2.718} puts number_hash[\"PI\"] ","date":"2021-07-15","objectID":"/ruby-cheatsheet/:0:7","tags":["Ruby","Programming"],"title":"Ruby CheatSheet","uri":"/ruby-cheatsheet/"},{"categories":["Programming Language"],"content":"Functions (pass by value) def add_num(num_1,num_2) return num_1.to_i + num_2.to_i end ","date":"2021-07-15","objectID":"/ruby-cheatsheet/:0:8","tags":["Ruby","Programming"],"title":"Ruby CheatSheet","uri":"/ruby-cheatsheet/"},{"categories":["Programming Language"],"content":"Exception age = 12 def check_age (age) raise ArgumentError, \"Enter pos number\" unless age \u003e 0 end begin check_age(-1) rescue ArgumentError puts \"Impossible age\" end ","date":"2021-07-15","objectID":"/ruby-cheatsheet/:0:9","tags":["Ruby","Programming"],"title":"Ruby CheatSheet","uri":"/ruby-cheatsheet/"},{"categories":["Programming Language"],"content":"tring mystr.upcase mystr.downcase mystr.swapcase mystr.chop # remove last char mystr.chomp('ab') # remove ab from last mystr.delete(\"a\") # delete every a arr = mystr.split(/ /) # split by space ","date":"2021-07-15","objectID":"/ruby-cheatsheet/:0:10","tags":["Ruby","Programming"],"title":"Ruby CheatSheet","uri":"/ruby-cheatsheet/"},{"categories":["Programming Language"],"content":"Symbol: Strings that can’t be changed :mysymbl ","date":"2021-07-15","objectID":"/ruby-cheatsheet/:0:11","tags":["Ruby","Programming"],"title":"Ruby CheatSheet","uri":"/ruby-cheatsheet/"},{"categories":["Programming Language"],"content":"Arithmetic Operators puts \"1 + 1 = \" + (1+1).to_s ","date":"2021-07-15","objectID":"/ruby-cheatsheet/:0:12","tags":["Ruby","Programming"],"title":"Ruby CheatSheet","uri":"/ruby-cheatsheet/"},{"categories":["Programming Language"],"content":"Define float (14 digits) num = 1.000 ref http://www.newthinktank.com/2015/02/ruby-programming-tutorial/ ","date":"2021-07-15","objectID":"/ruby-cheatsheet/:0:13","tags":["Ruby","Programming"],"title":"Ruby CheatSheet","uri":"/ruby-cheatsheet/"},{"categories":["Programming Language"],"content":"Common used Java code","date":"2021-06-24","objectID":"/java-cheatsheet/","tags":["Java","Programming"],"title":"Java CheatSheet","uri":"/java-cheatsheet/"},{"categories":["Programming Language"],"content":"Some Java to know ","date":"2021-06-24","objectID":"/java-cheatsheet/:0:0","tags":["Java","Programming"],"title":"Java CheatSheet","uri":"/java-cheatsheet/"},{"categories":["Programming Language"],"content":"Matrix int m = nums.length; int n = nums[0].length; // Reshape matrix for (int x = 0; x \u003c m * n; ++x) { ans[x / c][x % c] = nums[x / n][x % n]; } ","date":"2021-06-24","objectID":"/java-cheatsheet/:1:0","tags":["Java","Programming"],"title":"Java CheatSheet","uri":"/java-cheatsheet/"},{"categories":["Programming Language"],"content":"Collections Collections.swap(vector, 0, 4); Collections.reverse(row); // row is ArrayList\u003c\u003e() ","date":"2021-06-24","objectID":"/java-cheatsheet/:2:0","tags":["Java","Programming"],"title":"Java CheatSheet","uri":"/java-cheatsheet/"},{"categories":["Programming Language"],"content":"Stack Stack\u003cInteger\u003e s1 = new Stack\u003cInteger\u003e(); Stack\u003cListNode\u003e stack = new Stack\u003cListNode\u003e(); stack.pop().val; stack.push(temp); stack.isEmpty(); stack.peek(); stack.size(); ","date":"2021-06-24","objectID":"/java-cheatsheet/:3:0","tags":["Java","Programming"],"title":"Java CheatSheet","uri":"/java-cheatsheet/"},{"categories":["Programming Language"],"content":"Queue Queue\u003cInteger\u003e Q = new LinkedList\u003cInteger\u003e(); Q.size(); Q.poll(); Q.offer(); Q.peek(); ","date":"2021-06-24","objectID":"/java-cheatsheet/:4:0","tags":["Java","Programming"],"title":"Java CheatSheet","uri":"/java-cheatsheet/"},{"categories":["Programming Language"],"content":"Dequeue Queue in Java: https://dumbitdude.com/queue-in-java/ Deque: https://www.geeksforgeeks.org/deque-interface-java-example/ Double ended queue, allows LIFO and FIFO Deque\u003cString\u003e dq = new LinkedList\u003c\u003e(); dq.addLast(); = dq.add(); = dq.offer(); dq.addFirst(); = dq.push(); = dq.offerFirst(); dq.removeFirst(); dq.removeLast(); dq.peekFirst(); dq.peekLast(); ","date":"2021-06-24","objectID":"/java-cheatsheet/:5:0","tags":["Java","Programming"],"title":"Java CheatSheet","uri":"/java-cheatsheet/"},{"categories":["Programming Language"],"content":"Heap https://blog.csdn.net/xiaolinnulidushu/article/details/104629479 MinHeap PriorityQueue\u003cInteger\u003e heap = new PriorityQueue\u003c\u003e(); heap.offer(num); heap.poll(); heap.peek(); MaxHeap PriorityQueue\u003cInteger\u003e pQueue = new PriorityQueue\u003cInteger\u003e(Collections.reverseOrder()); // 默认是小根堆，实现大根堆需要重写一下比较器。 Queue\u003cInteger\u003e pq = new PriorityQueue\u003c\u003e((v1, v2) -\u003e (v2 - v1)); Queue\u003cInteger\u003e B = new PriorityQueue\u003c\u003e((x, y) -\u003e (y - x)); ","date":"2021-06-24","objectID":"/java-cheatsheet/:6:0","tags":["Java","Programming"],"title":"Java CheatSheet","uri":"/java-cheatsheet/"},{"categories":["Programming Language"],"content":"Integer Integer.MAX_VALUE Integer.MIN_VALUE Parse string to integer Integer.parseInt(s); ","date":"2021-06-24","objectID":"/java-cheatsheet/:7:0","tags":["Java","Programming"],"title":"Java CheatSheet","uri":"/java-cheatsheet/"},{"categories":["Programming Language"],"content":"long long pre = Long.MIN_VALUE; ","date":"2021-06-24","objectID":"/java-cheatsheet/:8:0","tags":["Java","Programming"],"title":"Java CheatSheet","uri":"/java-cheatsheet/"},{"categories":["Programming Language"],"content":"LinkedLIst ListNode[] A = new ListNode[100]; ListNode cur = head; ListNode cur = new ListNode(); ListNode res = cur; //用cur操作, return res; 同理 ListNode cur = head; 用cur操作 return head; // Initialzie 一个linkedlist需要 list type String [] a = new String[] { \"A\", \"B\", \"C\", \"D\" }; List\u003cString\u003e list = Arrays.asList(a); Dummy: // dummy –\u003e head –\u003e node1 –\u003e node2 –\u003e null ListNode dummy = new ListNode(0); dummy.next = head; // 新List，头部为0，指向head //或者 ListNode dummy = new ListNode(0,head); ListNode tmp = dummy; // 复制了一份，为了操作，return的时候return dummy.next，因为dummy仍然在头部 //Use tmp to iterate // 进行操作 return dummy.next; // dummy的value是0，.next则是答案 ListNode() Creates a completely blank ListNode ListNode(java.lang.Object data) Creates a new ListNode containing the specified data type. ListNode(java.lang.Object data, ListNode next) Creates a new ListNode object containing specified data and next references. LinkedList tmp = new LinkedList\u003c\u003e(); tmp.addLast(node.val); tmp.addFirst(node.val); tmp.getLast(); tmp.add(0, val); ","date":"2021-06-24","objectID":"/java-cheatsheet/:9:0","tags":["Java","Programming"],"title":"Java CheatSheet","uri":"/java-cheatsheet/"},{"categories":["Programming Language"],"content":"ArrayList List\u003cList\u003cInteger\u003e\u003e res = new ArrayList\u003c\u003e(); List\u003cInteger\u003e arr = new ArrayList\u003c\u003e(); arr.set(loc,value); // Insert value arr.add(x); // Append value arr.addAll(x) // ON arr.remove(3); // Remove by index arr.contains(5); // convert to List\u003cInteger\u003e Integer [] myarr = new Integer []; Arrays.asList(myarr); int[] numbers = {10 20, 30, 40}; int[] arr = new int[size]; Arrays.fill(arr, 0); int[][] numMatrix = { {1, 2, 3, 4}, {5, 6, 7, 8}}; // Convert hashset to ararylist return new ArrayList\u003c\u003e(myset); Convert arraylist/linkedlist to array 1D: LinkedList\u003cInteger\u003e list = new LinkedList\u003cInteger\u003e(); int[] a = list.toArray(); toArray \u003c---\u003e asList 2D: List\u003cint[]\u003e res = new ArrayList\u003c\u003e(); int [][] array = res.toArray(new int[res.size()][]); Convert Set to array // set –\u003e String[] HashSet\u003cString\u003e ans = new HashSet\u003cString\u003e(); ans.toArray(new String[0]); ","date":"2021-06-24","objectID":"/java-cheatsheet/:10:0","tags":["Java","Programming"],"title":"Java CheatSheet","uri":"/java-cheatsheet/"},{"categories":["Programming Language"],"content":"Arraylist vs Linkedlist ArrayList LinkedList dynamic array doubly linked list slow fast act as a list act as a list and queue ","date":"2021-06-24","objectID":"/java-cheatsheet/:11:0","tags":["Java","Programming"],"title":"Java CheatSheet","uri":"/java-cheatsheet/"},{"categories":["Programming Language"],"content":"ArrayList Operations: arr.set(); arr.add(); arr.get(); arr.size(); ","date":"2021-06-24","objectID":"/java-cheatsheet/:11:1","tags":["Java","Programming"],"title":"Java CheatSheet","uri":"/java-cheatsheet/"},{"categories":["Programming Language"],"content":"Array Initialization: int[] myIntArray = new int[3]; int[] myIntArray = {1, 2, 3}; int[] myIntArray = new int[]{1, 2, 3}; String[] myStringArray = new String[3]; String[] myStringArray = {\"a\", \"b\", \"c\"}; String[] myStringArray = new String[]{\"a\", \"b\", \"c\"}; myStringArray = new String[]{\"a\", \"b\", \"c\"}; Copy: Can also use .clone(); int[] a = new int[]{1,2,3,4,5}; int[] b = a.clone(); Arrays.copyOfRange(intersection, 0, index); copyofrange其实是复制从 0 至 index-1个elements （arr, inclusive, exclusive） Sort: Arrays.sort(arr); Arrays.sort(arr, (a,b) -\u003e Integer.compare(a[0], b[0])); // 2D: int[][] arr; Arrays.sort(a, Collections.reverseOrder()); // reverse order Return: return new int[]{1,2}; return new String(result); // char[] result = {'a','b'}; Return null array: return new int[0]; or return new int[]{}; // 2d return null return new int[0][] New: The elements in the array allocated by new will automatically be initialized to zero (for numeric types), false (for boolean), or null (for reference types) ","date":"2021-06-24","objectID":"/java-cheatsheet/:12:0","tags":["Java","Programming"],"title":"Java CheatSheet","uri":"/java-cheatsheet/"},{"categories":["Programming Language"],"content":"Math Math.max(1,2); Returns the highest value Math.pow(10,2); returns double Round up Math.ceil(125.9)=126.0 Math.ceil(0.4873)=1.0 Math.ceil(-0.65)=-0.0 Generate random number https://stackoverflow.com/questions/5887709/getting-random-numbers-in-java import java.util.Random; Random rand = new Random(); int n = rand.nextInt(50); // Obtain a number between [0 - 49]. double random = Math.random() * 49 + 1; // or int random = (int )(Math.random() * 50 + 1); random() method returns a random number between 0.0 and 0.9..., you multiply it by 50, so upper limit becomes 0.0 to 49.999... when you add 1, it becomes 1.0 to 50.999..., now when you truncate to int, you get 1 to 50. String public String reverseWords(String s) { String[] splited = s.trim().split(\"\\\\s+\"); // split by whitespace Collections.reverse(Arrays.asList(words)); return String.join(\" \", words); Substring s.substring(lo, lo + maxLen); eg. String s1=\"javatpoint\"; System.out.println(s1.substring(2,4));//returns va (invlusive, exclusive) System.out.println(s1.substring(2));//returns vatpoint // Comparsion s.equals(\"happy\"); Can't use s == \"happy\" Check char in string: str.charAt(index); Convert：convert char[] to a string char[] mychararr = s.toCharArray(); // [a,b,c,d] 1. mystr = String.valueOf(mychararr); // CAN NOT just use mystr = mychararr.toString(); 2. return new String(mychararr) --\u003e \"abcd\" // to convert char[] to string Array Use toString Arrays.toString(mychararr); --\u003e \"[a, b, c, d]\" Indexof System.out.println(\"FOO\".indexOf(\"\")); // outputs 0 wtf!!! System.out.println(\"FOO\".indexOf(\"bar\")); // outputs -1 as expected System.out.println(\"FOO\".indexOf(\"F\")); // outputs 0 as expected System.out.println(\"\".indexOf(\"\")); // outputs 0 as expected, I think Character Convert char to int int a = '15' - '0'; int a = Integer.parseInt(String.valueOf('15')); Character.isDigit(c); // boolean ","date":"2021-06-24","objectID":"/java-cheatsheet/:13:0","tags":["Java","Programming"],"title":"Java CheatSheet","uri":"/java-cheatsheet/"},{"categories":["Programming Language"],"content":"StringBuilder StringBuilder mystr; mystr.append(\"a\"); mystr.append(4); appends the string representation of the int argument to this sequence mystr.deleteCharAt(10); sb.reverse().toString(); ","date":"2021-06-24","objectID":"/java-cheatsheet/:13:1","tags":["Java","Programming"],"title":"Java CheatSheet","uri":"/java-cheatsheet/"},{"categories":["Programming Language"],"content":"length .length: // returns length of an array .length(): // returns length of a STRING ","date":"2021-06-24","objectID":"/java-cheatsheet/:14:0","tags":["Java","Programming"],"title":"Java CheatSheet","uri":"/java-cheatsheet/"},{"categories":["Programming Language"],"content":"loop traversal To traverse a string, we can use: for(String car: cars) {expressions} ","date":"2021-06-24","objectID":"/java-cheatsheet/:15:0","tags":["Java","Programming"],"title":"Java CheatSheet","uri":"/java-cheatsheet/"},{"categories":["Programming Language"],"content":"Hashset declaration Set\u003cPair\u003cInteger, Integer\u003e\u003e visited = new HashSet(); HashSet\u003cInteger\u003e myset = new HashSet\u003cInteger\u003e(); mySet.add (\"First\"); myset.remove(x); myset.contains(y); for(int obj : set) if(obj.equals(2)) return obj; Convert Haset set to array: int[] y = new int[set.size()]; int c = 0; for(int x : set) y[c++] = x; ","date":"2021-06-24","objectID":"/java-cheatsheet/:16:0","tags":["Java","Programming"],"title":"Java CheatSheet","uri":"/java-cheatsheet/"},{"categories":["Programming Language"],"content":"HashMap Hashtable\u003cInteger,String\u003e; myTable= new Hashtable\u003cInteger,String\u003e(); myTable.put(1, \"John\"); if (map.containsKey(\"vishal\")) Integer a = map.get(\"vishal\"); // Init HashMap\u003cInteger, Integer\u003e [] rows = new HashMap[9]; for (int i = 0; i \u003c 9; i++) { rows[i] = new HashMap\u003cInteger, Integer\u003e(); Character: HashMap\u003cCharacter,Integer\u003e mymap = new HashMap\u003cCharacter,Integer\u003e(); HashMap\u003cInteger,String\u003e myMap= new HashMap\u003cInteger,String\u003e(); myMap.put(1, \"First\"); 常用： for(int num : nums1) mymap.put(num,mymap.getOrDefault(num,0) + 1); for (Integer a : map.keySet()) { if(map.get(a) == 1) return a; } Common Use int count = map.getOrDefault(num, 0); // returns valuce at pos num, or return 0 Return map as arraylist return new ArrayList\u003c\u003e(mymap.values()); Map.Entry is a key and its value combined into one class. This allows you to iterate over Map.entrySet() instead of having to iterate over Map.keySet(), then getting the value for each key. A better way to write what you have is: for (Map.Entry\u003cString, JButton\u003e entry : listbouton.entrySet()) { String key = entry.getKey(); JButton value = entry.getValue(); this.add(value); } Initiazliation // this works for up to 10 elements: Map\u003cString, String\u003e test1 = Map.of( \"a\", \"b\", \"c\", \"d\" ); // this works for any number of elements: import static java.util.Map.entry; Map\u003cString, String\u003e test2 = Map.ofEntries( entry(\"a\", \"b\"), entry(\"c\", \"d\") ); ","date":"2021-06-24","objectID":"/java-cheatsheet/:17:0","tags":["Java","Programming"],"title":"Java CheatSheet","uri":"/java-cheatsheet/"},{"categories":["Programming Language"],"content":"TreeSet (basically a sorted hashset) TreeSet\u003cLong\u003e set = new TreeSet\u003cLong\u003e(); set.ceiling(x); The ceiling() method of java.util.TreeSet\u003cE\u003e class is used to return the least element in this set greater than or equal to the given element, or null if there is no such element. set.remove(x); ","date":"2021-06-24","objectID":"/java-cheatsheet/:18:0","tags":["Java","Programming"],"title":"Java CheatSheet","uri":"/java-cheatsheet/"},{"categories":["Programming Language"],"content":"TreeMap Internally, for every element, the keys are compared and sorted in the ascending order. tree_map = new TreeMap\u003cInteger, String\u003e(); ","date":"2021-06-24","objectID":"/java-cheatsheet/:19:0","tags":["Java","Programming"],"title":"Java CheatSheet","uri":"/java-cheatsheet/"},{"categories":["Programming Language"],"content":"Final final int myNum = 10; // Means myNum cannot be changed ","date":"2021-06-24","objectID":"/java-cheatsheet/:20:0","tags":["Java","Programming"],"title":"Java CheatSheet","uri":"/java-cheatsheet/"},{"categories":["Programming Language"],"content":"(? :) int score = 80; int reward = (store \u003e= 80) ? 100 : 50; ","date":"2021-06-24","objectID":"/java-cheatsheet/:21:0","tags":["Java","Programming"],"title":"Java CheatSheet","uri":"/java-cheatsheet/"},{"categories":["Programming Language"],"content":"Method/Function public class Student { String name; public Student() { name = \"Samuel\"; } public static void main(String[] args) { Student student = new Student(); System.out.println(student.name); } } Difference between a method and a funtion is: A method is associated with an object, while a function is not eg. myMethod(); // Function or method (means the same) var newstr = str.toUpperCase() // .toUpperCase() is the method ","date":"2021-06-24","objectID":"/java-cheatsheet/:22:0","tags":["Java","Programming"],"title":"Java CheatSheet","uri":"/java-cheatsheet/"},{"categories":["Programming Language"],"content":"Try Catch Finally public static void main(String[] args) { **Finally** block will **ALWAYS** execute when the try block exits try { System.out.println(0/1); int[] array = new int[]{1, 2}; System.out.println(array[3]); } catch (Exception e) { System.out.println(\"An exception occurs.\"); } finally { System.out.println(\"After try...catch block\"); } } Others ","date":"2021-06-24","objectID":"/java-cheatsheet/:23:0","tags":["Java","Programming"],"title":"Java CheatSheet","uri":"/java-cheatsheet/"},{"categories":["Programming Language"],"content":"Data types byte 1 byte Stores whole numbers from -128 to 127 short 2 bytes Stores whole numbers from -32,768 to 32,767 int 4 bytes Stores whole numbers from -2,147,483,648 to 2,147,483,647 long 8 bytes Stores whole numbers from -9,223,372,036,854,775,808 to - float 4 bytes Stores fractional numbers. Sufficient for storing 6 to 7 decimal digits double 8 bytes Stores fractional numbers. Sufficient for storing 15 decimal digits boolean 1 bit Stores true or false values char 2 bytes Stores a single character/letter or ASCII values ","date":"2021-06-24","objectID":"/java-cheatsheet/:24:0","tags":["Java","Programming"],"title":"Java CheatSheet","uri":"/java-cheatsheet/"},{"categories":["Programming Language"],"content":"Build environment for the first time ","date":"2021-06-24","objectID":"/java-cheatsheet/:25:0","tags":["Java","Programming"],"title":"Java CheatSheet","uri":"/java-cheatsheet/"},{"categories":["Programming Language"],"content":"Download JDK Typically, for Mac users: JDK will be stored under path: /Library/Java/JavaVirtualMachines/jdk-10.jdk/Contents/Home Follow steps below to add JAVA_HOME to your PATH in order to run Java under any path: Login and open a Terminal or command line window Open the ~/.bash_profile using vi or another command-line editor such as Pico. For example enter vi ~/.bash_profile. Set your PATH to include the JDK sub-folder named java. For example: export PATH=$PATH:/usr/java/jdk1.6.0_10/bin Save the changes and either logout and then back in, or, to active the new settings enter source ~/.bash_profile To be reviewd Encapsulation/Inheritance/Polymorphism ","date":"2021-06-24","objectID":"/java-cheatsheet/:25:1","tags":["Java","Programming"],"title":"Java CheatSheet","uri":"/java-cheatsheet/"},{"categories":["General Tech"],"content":"Build Your Hugo Blog Using GitHub and Netlify","date":"2021-06-22","objectID":"/build-hugo-blog/","tags":["Blog","Hugo","Git"],"title":"Ultimate guide to build your own blog","uri":"/build-hugo-blog/"},{"categories":["General Tech"],"content":"Before you start All hugo commands should be run in the root level ","date":"2021-06-22","objectID":"/build-hugo-blog/:1:0","tags":["Blog","Hugo","Git"],"title":"Ultimate guide to build your own blog","uri":"/build-hugo-blog/"},{"categories":["General Tech"],"content":"Build Hugo Blog Locally ","date":"2021-06-22","objectID":"/build-hugo-blog/:2:0","tags":["Blog","Hugo","Git"],"title":"Ultimate guide to build your own blog","uri":"/build-hugo-blog/"},{"categories":["General Tech"],"content":"Step 1: Install hugo \u0026\u0026 git For Mac user: brew install hugo brew install git ","date":"2021-06-22","objectID":"/build-hugo-blog/:2:1","tags":["Blog","Hugo","Git"],"title":"Ultimate guide to build your own blog","uri":"/build-hugo-blog/"},{"categories":["General Tech"],"content":"Step 2: Create a new site hugo new site myblog cd myblog ","date":"2021-06-22","objectID":"/build-hugo-blog/:2:2","tags":["Blog","Hugo","Git"],"title":"Ultimate guide to build your own blog","uri":"/build-hugo-blog/"},{"categories":["General Tech"],"content":"Step 3: Add a theme You can find Hugo themes Here In this case I use LoveIt theme as my example git init git submodule add https://github.com/dillonzq/LoveIt.git themes/LoveIt ","date":"2021-06-22","objectID":"/build-hugo-blog/:2:3","tags":["Blog","Hugo","Git"],"title":"Ultimate guide to build your own blog","uri":"/build-hugo-blog/"},{"categories":["General Tech"],"content":"Step 4: Basic Configuration Copy config.toml content from example site to your config.toml You can make your own changes in config.toml file ","date":"2021-06-22","objectID":"/build-hugo-blog/:2:4","tags":["Blog","Hugo","Git"],"title":"Ultimate guide to build your own blog","uri":"/build-hugo-blog/"},{"categories":["General Tech"],"content":"Step 5: Create your first post hugo new posts/my-first-post.md In .md file, set: draft: false Command above will generate a my-first-post.md file under the path: ./content/posts You should always use hugo new posts/file.md to create new files ","date":"2021-06-22","objectID":"/build-hugo-blog/:2:5","tags":["Blog","Hugo","Git"],"title":"Ultimate guide to build your own blog","uri":"/build-hugo-blog/"},{"categories":["General Tech"],"content":"Step 6: Host the Website Locally hugo serve Go to http://localhost:1313 ","date":"2021-06-22","objectID":"/build-hugo-blog/:2:6","tags":["Blog","Hugo","Git"],"title":"Ultimate guide to build your own blog","uri":"/build-hugo-blog/"},{"categories":["General Tech"],"content":"Step 7: Build the Website Run: hugo After you run the hugo command above, you will see content created under public folder in your blog folder ","date":"2021-06-22","objectID":"/build-hugo-blog/:2:7","tags":["Blog","Hugo","Git"],"title":"Ultimate guide to build your own blog","uri":"/build-hugo-blog/"},{"categories":["General Tech"],"content":"Upload your code to GitHub ","date":"2021-06-22","objectID":"/build-hugo-blog/:3:0","tags":["Blog","Hugo","Git"],"title":"Ultimate guide to build your own blog","uri":"/build-hugo-blog/"},{"categories":["General Tech"],"content":"1. Create a new repo on GitHub If you want to deploy on GitHub page: Create a repo named your-github-username.github.io For example: My GitHub username is code-panda-x My repo will be named code-panda-x.github.io ","date":"2021-06-22","objectID":"/build-hugo-blog/:3:1","tags":["Blog","Hugo","Git"],"title":"Ultimate guide to build your own blog","uri":"/build-hugo-blog/"},{"categories":["General Tech"],"content":"2. Git Initialiaztion git add . git commit -m \"first commit\" git branch -M main git remote add origin https://github.com/your-github-username/your-repo-name.git git push -u origin main Whenever you make changes in your blog folder Run : hugo Above code will update corresponding changes to public folder Then run: $ git add . $ git commit -m \"add blog post\" $ git push You can use git status to check your changes $ git status ","date":"2021-06-22","objectID":"/build-hugo-blog/:3:2","tags":["Blog","Hugo","Git"],"title":"Ultimate guide to build your own blog","uri":"/build-hugo-blog/"},{"categories":["General Tech"],"content":"Deploy on Netlify Add netlify.toml file to your blog: [build] publish = \"public\" command = \"hugo --gc --minify\" [context.production.environment] HUGO_VERSION = \"0.93.0\" HUGO_ENV = \"production\" HUGO_ENABLEGITINFO = \"true\" [context.split1] command = \"hugo --gc --minify --enableGitInfo\" [context.split1.environment] HUGO_VERSION = \"0.93.0\" HUGO_ENV = \"production\" [context.deploy-preview] command = \"hugo --gc --minify --buildFuture -b $DEPLOY_PRIME_URL\" [context.deploy-preview.environment] HUGO_VERSION = \"0.93.0\" [context.branch-deploy] command = \"hugo --gc --minify -b $DEPLOY_PRIME_URL\" [context.branch-deploy.environment] HUGO_VERSION = \"0.93.0\" [context.next.environment] HUGO_ENABLEGITINFO = \"true\" [[redirects]] from = \"/npmjs/*\" to = \"/npmjs/\" status = 200 Sign in Netlify with GitHub account Add new site - Import an existing project Select your GitHub repo Your site will be pubished with a netlify domain ","date":"2021-06-22","objectID":"/build-hugo-blog/:4:0","tags":["Blog","Hugo","Git"],"title":"Ultimate guide to build your own blog","uri":"/build-hugo-blog/"},{"categories":["General Tech"],"content":"Customize Domain Purchase your domain at Godaddy.com or namecheap.com Netlify Configuration Domains - Custom domains - Add custom domain - Enter your purchased domain ","date":"2021-06-22","objectID":"/build-hugo-blog/:4:1","tags":["Blog","Hugo","Git"],"title":"Ultimate guide to build your own blog","uri":"/build-hugo-blog/"},{"categories":["General Tech"],"content":"DNS Management Add: Type: A Name: @ Value: 75.2.60.5 (Netlify’s load balancer IP address) Type: CNAME Name: www Value: your-url.netlify.app ","date":"2021-06-22","objectID":"/build-hugo-blog/:4:2","tags":["Blog","Hugo","Git"],"title":"Ultimate guide to build your own blog","uri":"/build-hugo-blog/"},{"categories":["General Tech"],"content":"Deploy on GitHub Page Your site will be published on your-github-username.github.io ","date":"2021-06-22","objectID":"/build-hugo-blog/:5:0","tags":["Blog","Hugo","Git"],"title":"Ultimate guide to build your own blog","uri":"/build-hugo-blog/"},{"categories":["General Tech"],"content":"Customize Domain Purchase your domain at Godaddy.com or namecheap.com GitHub Page Configuration Settings - Code and automation - Custom domain - Enter your purchased domain ","date":"2021-06-22","objectID":"/build-hugo-blog/:5:1","tags":["Blog","Hugo","Git"],"title":"Ultimate guide to build your own blog","uri":"/build-hugo-blog/"},{"categories":["General Tech"],"content":"DNS Management Add: Type: A Name: @ Value: 185.199.108.153 Type: CNAME Name: www Value: your-github-username.github.io ","date":"2021-06-22","objectID":"/build-hugo-blog/:5:2","tags":["Blog","Hugo","Git"],"title":"Ultimate guide to build your own blog","uri":"/build-hugo-blog/"},{"categories":["General Tech"],"content":"Error Messages and Solutions Building sites … ERROR 2019/11/30 09:22:03 Failed to read Git log: fatal: your current branch 'master' does not have any commits yet Built in 135 ms In config.toml: Set enableGitInfo = true Error: module \"xxx\" not found; either add it as a Hugo Module or store it in \"/home\".: module does not exist In config.toml: Set themesDir = \"themes\" ","date":"2021-06-22","objectID":"/build-hugo-blog/:6:0","tags":["Blog","Hugo","Git"],"title":"Ultimate guide to build your own blog","uri":"/build-hugo-blog/"}]