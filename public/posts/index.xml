<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>All Posts - PandaX</title>
        <link>https://pandax.me/posts/</link>
        <description>All Posts | PandaX</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sat, 19 Aug 2023 11:18:36 -0500</lastBuildDate><atom:link href="https://pandax.me/posts/" rel="self" type="application/rss+xml" /><item>
    <title>Sql Cheatsheet</title>
    <link>https://pandax.me/sql/</link>
    <pubDate>Sat, 19 Aug 2023 11:18:36 -0500</pubDate>
    <author>Author</author>
    <guid>https://pandax.me/sql/</guid>
    <description><![CDATA[SQL queries SQL Summary: https://www.w3schools.com/sql/sql_examples.asp
SQL operations: https://www.w3schools.com/sql/sql_operators.asp
Select 1 2 3 4 select column from table select distinct column from table select distinct id from table Where 1 2 3 4 5 SELECT * FROM Customers WHERE Country=&#39;Mexico&#39; SELECT * FROM Customers WHERE CustomerID=1 AND, OR and NOT Operators 1 2 3 4 5 SELECT * FROM Customers WHERE Country=&#39;Germany&#39; AND (City=&#39;Berlin&#39; OR City=&#39;München&#39;); SELECT * FROM Customers WHERE NOT Country=&#39;Germany&#39; AND NOT Country=&#39;USA&#39;; ORDER BY This means that it orders by Country, but if some rows have the same Country, it orders them by CustomerName in descending order:]]></description>
</item><item>
    <title>All About Testing</title>
    <link>https://pandax.me/tests/</link>
    <pubDate>Thu, 10 Aug 2023 19:06:09 -0500</pubDate>
    <author>Author</author>
    <guid>https://pandax.me/tests/</guid>
    <description><![CDATA[Different Testing Concepts Unit testing: test the smallest piece of code Integration testing: test if different components work together System testing: test every component of an application to make sure that they work as a complete and unified whole Smoke testing: ensure that the critical functions of the program are working Regression testing: determine if code modifications break an application Performance testing: examines the speed, stability, reliability, scalability, and resource usage of a software application under a specified workload Load testing: determines how the software application behaves while being accessed by multiple users simultaneously Stress testing: tests beyond normal operational capacity to test the results More White box testing: Know code and structure of the product to be tested and uses that knowledge to perform the tests Black box testing: Does not know its internal functioning ]]></description>
</item><item>
    <title>Multithreading</title>
    <link>https://pandax.me/multithreading/</link>
    <pubDate>Sun, 06 Aug 2023 15:19:27 -0500</pubDate>
    <author>Author</author>
    <guid>https://pandax.me/multithreading/</guid>
    <description><![CDATA[Multithreading on a Single Processor The execution of multiple threads on a single CPU Multithreading on a single processor gives the illusion of running in parallel. In reality, the processor is switching by using a scheduling algorithm. Or, it’s switching based on a combination of external inputs (interrupts) and how the threads have been prioritized. These threads run concurrently and they share resources For example, this is a bit like chatting with different people through various IM windows; although you’re actually switching back and forth, the net result is that you’re having multiple conversations at the same time.]]></description>
</item><item>
    <title>Concurrency vs Parallelism</title>
    <link>https://pandax.me/concurrency/</link>
    <pubDate>Mon, 31 Jul 2023 20:30:01 -0500</pubDate>
    <author>Author</author>
    <guid>https://pandax.me/concurrency/</guid>
    <description><![CDATA[Concurrency (Multithreading on a Single Processor) Concurrency means executing multiple tasks at the same time but not necessarily simultaneously. When you have to perform more than one task but you have a single resource then we go for concurrency. In a single-core environment, concurrency is achieved by context switching. (the execution of multiple tasks is interleaved, instead of each task being executed sequentially one after another.)
For example: This is a bit like chatting with different people through various IM windows; although you’re actually switching back and forth, the net result is that you’re having multiple conversations at the same time.]]></description>
</item><item>
    <title>Thread vs Process</title>
    <link>https://pandax.me/thread-process/</link>
    <pubDate>Thu, 27 Jul 2023 23:38:46 -0500</pubDate>
    <author>Author</author>
    <guid>https://pandax.me/thread-process/</guid>
    <description><![CDATA[What is a Thread, really? Short answer:
Thread is a subset of a process Longer answer:
Thread is an independent set of values for CPU registers Detailed answer:
A thread is an execution context for CPU, which is all the information CPU needs to execute instructions. Essentially: More about thread
Thread components: Program counter: keeps track of which instruc­tion to execute next Stack: which contains the execution history Registers: which hold its current working variables Example: A single thread could be displaying the current tab you’re in, and a different thread could be another tab.]]></description>
</item><item>
    <title>Async Programming</title>
    <link>https://pandax.me/async/</link>
    <pubDate>Wed, 26 Jul 2023 21:03:35 -0500</pubDate>
    <author>Author</author>
    <guid>https://pandax.me/async/</guid>
    <description><![CDATA[Async Porgramming What is async programming? Async programming is about non-blocking execution between functions.
It enables your program to start a potentially long-running task and still be able to be responsive to other events while that task runs,
So we don’t have to wait our time waiting for that long task to be finished
Example Data may take long a long time to submit to/retrieve from a database. With asynchronous programming, the user can move to another screen while the function continues to execute.]]></description>
</item><item>
    <title>Ssr vs Csr</title>
    <link>https://pandax.me/ssr-vs-csr/</link>
    <pubDate>Sun, 23 Jul 2023 13:45:28 -0500</pubDate>
    <author>Author</author>
    <guid>https://pandax.me/ssr-vs-csr/</guid>
    <description><![CDATA[When user sends a request to a server, different server responses differently depending on the implementations.
Server side rendering Whenever you visit a website, your browser makes a request to the server. Once the request is done processing, your browser gets back the fully rendered HTML and displays it on the screen. If you then decide to visit a different page on the website, your browser will once again make another request for the new information.]]></description>
</item><item>
    <title>How are blogs built</title>
    <link>https://pandax.me/how-are-blogs-built/</link>
    <pubDate>Wed, 19 Jul 2023 20:43:29 -0500</pubDate>
    <author>Author</author>
    <guid>https://pandax.me/how-are-blogs-built/</guid>
    <description><![CDATA[How are most of the websites/blogs built? Really? Typically, there are two layers of website building:
Pull content from local file system (md files) or third party CMS Render the website The first layer - Content pulling Conventional blog engines hosted on GitHub (Hexo, Hugo, Jekyll) host their &ldquo;content&rdquo; in files stored and managed by Git.
Gatsby and Gridsome, besides supporting file-based content sourcing, also have plugins that enables them to pull &ldquo;content&rdquo; from a third-party CMS, whether it&rsquo;s a self-hosted WordPress or Ghost, or a standalone cloud-based solution like Strapi, DatoCMS, or Contentful.]]></description>
</item><item>
    <title>Docker &amp; Kubernetes</title>
    <link>https://pandax.me/docker/</link>
    <pubDate>Fri, 22 Apr 2022 17:36:35 -0500</pubDate>
    <author>Author</author>
    <guid>https://pandax.me/docker/</guid>
    <description><![CDATA[Docker About Docker Problem: It works on my machine, but not works on others'
Solution:
VM Docker Docker is a technology for creating and running containers, so we don&rsquo;t need redudent VMs!
Docker allows different machines to share the same environments by using sharing docker image and create same containers
Docker images DockerFile + App files &ndash;&gt; Docker &ndash;&gt; Image (shared to others)
Docker image explains what your environment looks like Docker image contains everything a container needs to run:]]></description>
</item><item>
    <title>Microservices vs Monolith</title>
    <link>https://pandax.me/microservices/</link>
    <pubDate>Fri, 22 Apr 2022 17:35:01 -0500</pubDate>
    <author>Author</author>
    <guid>https://pandax.me/microservices/</guid>
    <description><![CDATA[MicroService Take every app function and put it in its own service Runs in its own container Communicate via APIs But if each microservice is implemented in different languages/environment, how do we deploy? Deployment: Use Docker ! Put each microservice into containers
Pros Flexibility (each microservice can be built in different languages/technologies) Less risk in change Independent scaling Faster release cycles Monolith Server-side systme based on single application Pros Good for small team Less complex Less duplication Run fast Cons Highly dependent (single point of failure) Language/Framework Growth Scaling issue Complex deployment Spring Boot Goal Enable quickly built applications Provide common non-functional features Not Spring boot does NOT generate code Spring boot is NOT an application server or a web server Features Quick starter projects with auto configuration]]></description>
</item></channel>
</rss>
